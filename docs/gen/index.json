[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/abi.js",
    "content": "let padStart = require('lodash/padStart')\nlet padEnd = require('lodash/padEnd')\nlet {isString, isObject, isEmpty, each, flatten} = require('underscore')\nlet {\n  copyString,\n  prependZeroX,\n  toBuffer,\n  removeLeadingZeroX\n} = require('./lib/formats')\nlet {keccak256} = require('./lib/crypto')\nlet solidity = require('./lib/solidity')\nlet values = require('./lib/values')\n\n/**\n * Shared between function and event signatures. Hashes the function name\n * @param {string} val\n * @return {string} hash\n */\nfunction fnHashBuffer(val) {\n  let op\n\n  if (isString(val) === true) {\n    op = copyString(val)\n  }\n\n  if (isObject(val) === true) {\n    op = copyString(val.name)\n\n    if (isEmpty(val.inputs) === false) {\n      op += '(' + val.inputs.map(item => item.type).join(',') + ')'\n    }\n  }\n\n  return keccak256(op)\n}\n\nlet hexStringPadLeft = val =>\n  padStart(val, values.solidity.typeStringLength, '0')\n\nlet hexStringPadRight = val =>\n  padEnd(val, values.solidity.typeStringLength, '0')\n\nlet dimensionSorter = (a, b) => a.index > b.index\n\nfunction encodeAbiString(val) {\n  let length = hexStringPadLeft(val.length.toString(16))\n  let stringValue = hexStringPadRight(toBuffer(val, 'utf8').toString('hex'))\n  return `${length}${stringValue}`\n}\n\nfunction encodeAbiBoolean(val) {\n  return copyString(\n    val === true ? values.solidity.boolean.one : values.solidity.boolean.zero\n  )\n}\n\nfunction encodeAbiNumber(val) {\n  return hexStringPadLeft(toBuffer(val).toString('hex'))\n}\n\nfunction encodeAbiAddress(val) {\n  return removeLeadingZeroX(val)\n}\n\nlet abiTypeEncoders = {\n  string: encodeAbiString,\n  bytes: encodeAbiString,\n  bool: encodeAbiBoolean,\n  uint: encodeAbiNumber,\n  int: encodeAbiNumber,\n  fixed: encodeAbiNumber,\n  ufixed: encodeAbiNumber,\n  address: encodeAbiAddress\n}\n\n/**\n * Encode event to its ABI signature\n * @param {string|object} val\n * @return {string}\n */\nfunction encodeEventSignature(val) {\n  return prependZeroX(fnHashBuffer(val).toString('hex'))\n}\n\n/**\n * Encode function to its ABI signature\n * @param {string|object} val\n * @return {string}\n */\nfunction encodeFunctionSignature(val) {\n  return prependZeroX(\n    fnHashBuffer(val)\n      .slice(0, solidity.types.function.length)\n      .toString('hex')\n  )\n}\n\n/**\n * Encode a list of parameters to ABI signature\n * @param {array} types\n * @param {array} params\n * @return {string}\n */\nfunction encodeParameters(types, params) {\n  // parse all the types\n  let parsedTypes = types.map(solidity.parseType)\n  let op = []\n\n  // if any are dynamic we must use offsets\n  // let needsOffsets = parsedTypes.some(item => item.dynamic === true)\n\n  each(params, (typeValues, index) => {\n    let {baseType, array, dynamic /*, dimensions*/} = parsedTypes[index]\n    let valueParser = abiTypeEncoders[baseType]\n    // dimensions = dimensions.sort(dimensionSorter)\n\n    if (array === true) {\n      let typeOp = []\n\n      if (dynamic === true) {\n        let offset = encodeAbiNumber(\n          toBuffer(flatten(op).join(''), 'hex').length\n        )\n        // console.log('2 offset', offset)\n        typeOp.push(offset)\n      }\n\n      let length = encodeAbiNumber(typeValues.length)\n      typeOp.push(length)\n\n      each(typeValues, item => {\n        let parsedItem = valueParser(item)\n        typeOp.push(parsedItem)\n      })\n\n      return op.push(typeOp)\n    }\n\n    op.push(valueParser(typeValues))\n  })\n\n  return prependZeroX(flatten(op).join(''))\n}\n\n/**\n * Encode parameter to ABI signature\n * @param {string} type\n * @param {string|array|object} param\n * @return {string}\n */\nfunction encodeParameter(type, param) {\n  return encodeParameters([type], [param])\n}\n\n/**\n * Encode function call to ABI signature\n * @param {object} jsonInterface\n * @param {array} params\n * @return {string}\n */\nfunction encodeFunctionCall(jsonInterface, params) {}\n\n/**\n * Decode a parameter value from it's ABI encoding\n * @param {string} type\n * @param {string} val\n * @return {string}\n */\nfunction decodeParameter(type, val) {}\n\n/**\n * Decode the parameters hex into an array of decoded values\n * @param {array} types\n * @param {string} val\n * @return {array} [description]\n */\nfunction decodeParameters(types, val) {}\n\n/**\n * ABI decoded log data\n * @param {array} inputs\n * @param {string} val\n * @param {array} topics\n * @return {array}\n */\nfunction decodeLog(inputs, val, topics) {}\n\nmodule.exports = {\n  encodeFunctionSignature,\n  encodeEventSignature,\n  encodeParameter,\n  encodeParameters,\n  encodeFunctionCall,\n  decodeParameter,\n  decodeParameters,\n  decodeLog\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/abi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "padStart",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~padStart",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "padEnd",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~padEnd",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~isString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "copyString",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~copyString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "keccak256",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~keccak256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "solidity",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~solidity",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "values",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "fnHashBuffer",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~fnHashBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Shared between function and event signatures. Hashes the function name",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hash"
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "hexStringPadLeft",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~hexStringPadLeft",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "hexStringPadRight",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~hexStringPadRight",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "dimensionSorter",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~dimensionSorter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "encodeAbiString",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeAbiString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "encodeAbiBoolean",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeAbiBoolean",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "encodeAbiNumber",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeAbiNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "encodeAbiAddress",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeAbiAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "abiTypeEncoders",
    "memberof": "src/abi.js",
    "static": true,
    "longname": "src/abi.js~abiTypeEncoders",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "{\"string\": *, \"bytes\": *, \"bool\": *, \"uint\": *, \"int\": *, \"fixed\": *, \"ufixed\": *, \"address\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "encodeEventSignature",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeEventSignature",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "encodeFunctionSignature",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeFunctionSignature",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Encode function to its ABI signature",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "encodeParameters",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeParameters",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Encode a list of parameters to ABI signature",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "encodeParameter",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeParameter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Encode parameter to ABI signature",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "array",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "encodeFunctionCall",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~encodeFunctionCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Encode function call to ABI signature",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "jsonInterface",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "decodeParameter",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~decodeParameter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Decode a parameter value from it's ABI encoding",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "decodeParameters",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~decodeParameters",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "Decode the parameters hex into an array of decoded values",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "decodeLog",
    "memberof": "src/abi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/abi.js~decodeLog",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/abi.js",
    "importStyle": null,
    "description": "ABI decoded log data",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "inputs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "topics",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/accounts.js",
    "content": "let parallel = require('async/parallel')\nlet get = require('lodash/get')\nlet uuidv4 = require('uuid/v4')\nlet {isEmpty, isFunction, isObject, find} = require('underscore')\nlet rlp = require('rlp')\nlet {assignExtend} = require('./extend')\nlet {assignProvider} = require('./providers')\nlet {\n  isPrivateKey,\n  createA0Address,\n  createA0AddressString,\n  isAccountAddress,\n  createPrivateKey\n} = require('./lib/accounts')\nlet {hexToNumber} = require('./utils')\nlet crypto = require('./lib/crypto')\nlet {keccak256, nacl, scrypt} = crypto\nlet {validateTransaction} = require('./lib/transactions')\nlet {\n  toBuffer,\n  equalBuffers,\n  randomHexBuffer,\n  removeLeadingZeroX\n} = require('./lib/formats')\nlet values = require('./lib/values')\nlet Wallet = require('./wallet')\n\nlet methods = [\n  {\n    name: 'getId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  },\n  {\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [\n      function(address) {\n        if (isAccountAddress(address) === true) {\n          return address\n        } else {\n          throw new Error(\n            'Address ' +\n              address +\n              ' is not a valid address to get the \"transactionCount\".'\n          )\n        }\n      },\n      function() {\n        return 'latest'\n      }\n    ]\n  }\n]\n\nlet signTransactionDefaults = {\n  chainId: values.nat.one,\n  to: values.zeroX,\n  data: values.zeroX,\n  value: values.zeroX\n}\n\nfunction fromNat(val) {\n  if (val === values.nat.zero) {\n    return values.zeroX\n  }\n\n  if (val.length % 2 === 0) {\n    return val\n  }\n\n  return values.nat.zero + removeLeadingZeroX(val)\n}\n\n/**\n * Account constructor\n * @param {object} options\n * @param {object} options.accounts\n * @param {string} options.address\n * @param {buffer} options.entropy\n * @param {buffer} options.privateKey\n * @returns {object}\n */\nfunction Account({accounts, address, entropy, privateKey}) {\n  if (isEmpty(accounts) === true) {\n    throw new Error(\n      'an accounts instance is necessary to instantiate an account'\n    )\n  }\n\n  if (isEmpty(address) == false && isAccountAddress(address) === false) {\n    throw new Error('an invalid address was passed to Account')\n  }\n\n  // held internally to access accounts functions\n  this._accounts = accounts\n\n  // key generation entropy\n  let ent =\n    (isEmpty(entropy) === false && toBuffer(entropy)) || randomHexBuffer()\n\n  this.privateKey =\n    (isEmpty(privateKey) === false && toBuffer(privateKey)) ||\n    createPrivateKey(ent)\n\n  let kp = nacl.sign.keyPair.fromSeed(this.privateKey)\n\n  this._nacl = {\n    publicKey: toBuffer(kp.publicKey),\n    secretKey: toBuffer(kp.secretKey)\n  }\n\n  // held so we don't have to recompute\n  this._addressBuffer = null\n\n  // 0xAO address\n  this.address = address || null\n\n  if (isEmpty(this.address) === true && isEmpty(this.privateKey) === false) {\n    this._addressBuffer = createA0Address(this.privateKey)\n    this.address = createA0AddressString(this._addressBuffer)\n  }\n}\n\nAccount.prototype.signTransaction = function(tx, done) {\n  let {privateKey} = this\n  return this._accounts.signTransaction(tx, privateKey, done)\n}\n\nAccount.prototype.sign = function(message) {\n  let {privateKey} = this\n  return this._accounts.sign(message, privateKey)\n}\n\nAccount.prototype.encrypt = function(password, options) {\n  let {privateKey} = this\n  return this._accounts.encrypt(privateKey, password, options)\n}\n\n/**\n * Accounts constructor\n */\nfunction Accounts(provider, providerOpts) {\n  assignProvider(this, {provider, providerOpts})\n  assignExtend(this, {methods})\n  this.wallet = new Wallet(this)\n}\n\n/*\n\nAccounts instance members\n\n*/\n\n/**\n * Create Account using randomized data\n * @param {object} entropy hex buffer or string\n * @return {object}\n */\nAccounts.prototype.create = function(entropy) {\n  let accounts = this\n  let account = new Account({accounts, entropy})\n\n  // it could automatically add into the wallet\n  // this.wallet.add(account)\n  return account\n}\n\nAccounts.prototype._findAccountByPk = function(privateKey) {\n  return find(this.wallet, account => {\n    let privKey = get(account, 'privateKey')\n    if (isEmpty(privKey) === true) {\n      return false\n    }\n    return equalBuffers(privateKey, privKey)\n  })\n}\n\n/**\n * Get an account by providing a private key\n * @param {object} privateKey hex buffer or string\n * @return {object} [description]\n */\nAccounts.prototype.privateKeyToAccount = function(privateKey) {\n  let accounts = this\n  let account =\n    this._findAccountByPk(privateKey) || new Account({accounts, privateKey})\n  // this.wallet.add(account)\n  return account\n}\n\nAccounts.prototype.signTransaction = function(tx, privateKey, done) {\n  function signTransactionFailed(err) {\n    if (isFunction(done) === true) {\n      return done(err)\n    }\n    return Promise.reject(err)\n  }\n\n  if (isEmpty(tx) === true) {\n    return signTransactionFailed(new Error('no transaction was provided'))\n  }\n\n  if (isPrivateKey(privateKey) === false) {\n    return signTransactionFailed(new Error('the private key was invalid'))\n  }\n\n  let steps = {}\n  let account =\n    this._findAccountByPk(privateKey) || this.privateKeyToAccount(privateKey)\n  let transaction = Object.assign({}, signTransactionDefaults, tx)\n  let {_nacl} = account\n\n  if (isEmpty(transaction.from) === true) {\n    transaction.from = account.address\n  }\n\n  if (isEmpty(transaction.chainId) === true) {\n    // get chain id\n    steps.chainId = done => this.getId(done)\n  }\n\n  if (isEmpty(transaction.gasPrice) === true) {\n    // get gas price\n    steps.gasPrice = done => this.getGasPrice(done)\n  }\n\n  if (isEmpty(transaction.nonce) === true) {\n    // get transaction count to use as nonce\n    steps.nonce = done =>\n      this.getTransactionCount(account.address, 'latest', done)\n  }\n\n  function sign(res) {\n    transaction = Object.assign({}, transaction, res)\n    let [valid, error] = validateTransaction(transaction)\n\n    if (valid === false) {\n      throw error\n    }\n\n    let {\n      to,\n      // from,\n      data,\n      value,\n      gas,\n      // gasLimit,\n      gasPrice,\n      nonce,\n      chainId\n    } = transaction\n\n    let encoded = rlp.encode([\n      fromNat(nonce),\n      fromNat(gasPrice),\n      fromNat(gas),\n      to.toLowerCase(),\n      fromNat(value),\n      data,\n      fromNat(chainId),\n      values.zeroX,\n      values.zeroX\n    ])\n\n    let messageHash = keccak256(encoded)\n    let signature = toBuffer(nacl.sign(toBuffer(messageHash), _nacl.secretKey))\n    let rawTx = rlp.decode(encoded).concat(signature)\n    let rawTransaction = rlp.encode(rawTx)\n\n    return {\n      messageHash,\n      signature,\n      rawTransaction\n    }\n  }\n\n  // callback\n  if (isFunction(done) === true) {\n    return parallel(steps, (err, res) => {\n      if (isEmpty(err) === false) {\n        return done(err)\n      }\n\n      try {\n        done(null, sign(res))\n      } catch (e) {\n        done(e)\n      }\n    })\n  }\n\n  // Promise\n  return new Promise((resolve, reject) => {\n    parallel(steps, (err, res) => {\n      if (isEmpty(err) === false) {\n        return reject(err)\n      }\n\n      try {\n        resolve(sign(res))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n\nAccounts.prototype.recoverTransaction = function(rawTx) {\n  throw new Error(`recoverTransaction not yet implemented ${rawTx}`)\n}\n\n/**\n * Hashed aion signed message with preamble\n * @param {string} message\n * @return {buffer} keccak256 hash\n */\nAccounts.prototype.hashMessage = function(message) {\n  let messageBuffer = toBuffer(message)\n  let len = messageBuffer.length\n  let preamble = `\\x19Aion Signed Message:\\n${len}`\n  let preambleBuffer = toBuffer(preamble)\n  return keccak256(Buffer.concat([preambleBuffer, messageBuffer]))\n}\n\n/**\n * Sign the message with account address and message signature\n * @param {string} message\n * @param {buffer} privateKey\n * @return {object} contains message, messageHash, signature\n */\nAccounts.prototype.sign = function(message, privateKey) {\n  let {address, _nacl} =\n    this._findAccountByPk(privateKey) || this.privateKeyToAccount(privateKey)\n  let messageHash = this.hashMessage(message)\n  let messageSignature = nacl.sign(toBuffer(messageHash), _nacl.secretKey)\n  let signature = Buffer.concat([toBuffer(address), messageSignature]).toString(\n    'hex'\n  )\n  return {\n    message,\n    messageHash,\n    signature\n  }\n}\n\n/**\n * The aion address is the first 64 bytes of the signature\n * @param {object|string} message\n * @param {string|buffer} signature\n * @return {string} the signing address\n */\nAccounts.prototype.recover = function(message, signature) {\n  return toBuffer(signature || message.signature)\n    .slice(0, 32)\n    .toString('hex')\n}\n\n/**\n * Encrypt an account to keystore v3 format\n * @param {buffer} privateKey\n * @param {string|Buffer} password\n * @param {object} options\n * @param {string} options.kdf pbkdf2 or scrypt\n * @param {buffer} [options.salt]\n * @param {buffer} [options.iv] initialization vector\n * @param {number} [options.dklen] key length bytes\n * @param {number} [options.c] pbkdf2 c variable\n * @param {number} [options.n] scrypt n variable\n * @param {number} [options.r] scrypt r variable\n * @param {number} [options.p] scrypt p variable\n * @param {function} [options.scryptProgress] arguments (current, total, percent)\n * @param {number} [options.cipher] algorithm\n * @param {number} [options.uuid] random bytes for id\n * @return {object} [description]\n */\nAccounts.prototype.encrypt = function(privateKey, password, options = {}) {\n  if (isEmpty(privateKey) === true) {\n    throw new Error(`missing private key`)\n  }\n\n  if (isEmpty(password) === true) {\n    throw new Error(`missing password`)\n  }\n\n  let account = this.privateKeyToAccount(privateKey)\n  let address = removeLeadingZeroX(account.address.toLowerCase())\n\n  let {\n    salt = randomHexBuffer(values.crypto.saltLength),\n    iv = randomHexBuffer(values.crypto.ivLength),\n    kdf = values.crypto.kdf,\n    dklen = values.crypto.dklen\n  } = options\n\n  iv = toBuffer(iv)\n  let pwBuf = toBuffer(password)\n  let saltBuf = toBuffer(salt)\n  salt = salt.toString('hex')\n\n  let derivedKey\n  let kdfparams = {dklen, salt}\n\n  if (kdf === 'pbkdf2') {\n    let {c = values.crypto.pbkdf2.c} = options\n    let digest = values.crypto.pbkdf2.digest\n\n    kdfparams.c = c\n\n    // this values doesn't do anything\n    // it just goes into the return object kdfparams\n    kdfparams.prf = values.crypto.pbkdf2.prf\n\n    derivedKey = crypto.node.pbkdf2Sync(pwBuf, saltBuf, c, dklen, digest)\n  }\n\n  if (kdf === 'scrypt') {\n    let {\n      n = values.crypto.scrypt.n,\n      r = values.crypto.scrypt.r,\n      p = values.crypto.scrypt.p\n    } = options\n    kdfparams.n = n\n    kdfparams.r = r\n    kdfparams.p = p\n    let scryptArgs = [pwBuf, saltBuf, n, r, p, dklen]\n    if (isFunction(options.scryptProgress) === true) {\n      scryptArgs.push(options.scryptProgress)\n    }\n    derivedKey = scrypt.apply(null, scryptArgs)\n  }\n\n  if (isEmpty(derivedKey) === true) {\n    throw new Error('Unsupported kdf')\n  }\n\n  let algorithm = options.cipher || values.crypto.cipherIvAlgorithm\n  let keyStart = derivedKey.slice(0, 16)\n  let keyEnd = derivedKey.slice(16, 32)\n  let cipher = crypto.node.createCipheriv(algorithm, keyStart, iv)\n\n  if (isEmpty(cipher) === true) {\n    throw new Error('Unsupported cipher')\n  }\n\n  let cipherBuf = Buffer.concat([cipher.update(privateKey), cipher.final()])\n  let ciphertext = cipherBuf.toString('hex')\n  let mac = keccak256(Buffer.concat([keyEnd, cipherBuf])).toString('hex')\n  let version = 3\n  let {uuid = crypto.node.randomBytes(values.crypto.uuidRandomBytes)} = options\n  let id = uuidv4({random: uuid})\n  let cipherparams = {iv: iv.toString('hex')}\n\n  return {\n    version,\n    id,\n    address,\n    crypto: {\n      ciphertext,\n      cipherparams,\n      cipher: algorithm,\n      kdf,\n      kdfparams,\n      mac\n    }\n  }\n}\n\nAccounts.prototype.decrypt = function(ksv3, password, nonStrict) {\n  if (isEmpty(password) === true) {\n    throw new Error('No password given.')\n  }\n\n  let keystore =\n    isObject(ksv3) === true\n      ? ksv3\n      : JSON.parse(nonStrict === true ? ksv3.toLowerCase() : ksv3)\n\n  if (keystore.version !== 3) {\n    throw new Error('not a valid keystore v3 object')\n  }\n\n  let derivedKey\n  let {kdf, cipherparams} = keystore.crypto\n  let algorithm = keystore.crypto.cipher\n  let {kdfparams, ciphertext} = keystore.crypto\n  let {salt, dklen} = kdfparams\n  let pwBuf = toBuffer(password)\n  let saltBuf = toBuffer(salt)\n  let cipherBuf = toBuffer(ciphertext)\n\n  if (kdf === 'scrypt') {\n    // scrypt-specific params\n    let {n, r, p} = kdfparams\n    derivedKey = crypto.scrypt(pwBuf, saltBuf, n, r, p, dklen)\n  }\n\n  if (kdf === 'pbkdf2') {\n    // pbkdf2-specific params\n    let {c} = kdfparams\n    let digest = values.crypto.pbkdf2.digest\n    derivedKey = crypto.node.pbkdf2Sync(pwBuf, saltBuf, c, dklen, digest)\n  }\n\n  if (isEmpty(derivedKey) === true) {\n    throw new Error('Unsupported key derivation scheme')\n  }\n\n  let keyStart = derivedKey.slice(0, 16)\n  let keyEnd = derivedKey.slice(16, 32)\n  let mac = keccak256(Buffer.concat([keyEnd, cipherBuf]))\n\n  if (mac !== keystore.crypto.mac) {\n    throw new Error(`\n      The mac hash failed. This indicates password could be wrong.\n      keystore mac: ${keystore.crypto.mac}\n      calculated mac: ${mac}\n    `)\n  }\n\n  // initialization vector\n  let iv = toBuffer(cipherparams.iv)\n  let decipher = crypto.node.createDecipheriv(algorithm, keyStart, iv)\n  let privateKey = Buffer.concat([decipher.update(cipherBuf), decipher.final()])\n\n  return this.privateKeyToAccount(privateKey)\n}\n\nmodule.exports = Accounts\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/accounts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "parallel",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~parallel",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "get",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~get",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "uuidv4",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~uuidv4",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~isEmpty",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "rlp",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~rlp",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "assignProvider",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "isPrivateKey",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~isPrivateKey",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "hexToNumber",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~hexToNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "crypto",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "keccak256",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~keccak256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "validateTransaction",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~validateTransaction",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "toBuffer",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~toBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "values",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "Wallet",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~Wallet",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "signTransactionDefaults",
    "memberof": "src/accounts.js",
    "static": true,
    "longname": "src/accounts.js~signTransactionDefaults",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{\"chainId\": *, \"to\": *, \"data\": *, \"value\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "fromNat",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~fromNat",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "Account",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~Account",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Account constructor",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.accounts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.address",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.entropy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.privateKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "signTransaction",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~signTransaction",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "tx",
        "types": [
          "*"
        ]
      },
      {
        "name": "done",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "sign",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~sign",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "encrypt",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~encrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "Accounts",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~Accounts",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Accounts constructor",
    "lineNumber": 150,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "providerOpts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "create",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~create",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Create Account using randomized data",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "entropy",
        "description": "hex buffer or string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "_findAccountByPk",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~_findAccountByPk",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "privateKey",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "privateKeyToAccount",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~privateKeyToAccount",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Get an account by providing a private key",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "privateKey",
        "description": "hex buffer or string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "signTransaction",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~signTransaction",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "tx",
        "types": [
          "*"
        ]
      },
      {
        "name": "privateKey",
        "types": [
          "*"
        ]
      },
      {
        "name": "done",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "recoverTransaction",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~recoverTransaction",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 316,
    "undocument": true,
    "params": [
      {
        "name": "rawTx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "hashMessage",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~hashMessage",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Hashed aion signed message with preamble",
    "lineNumber": 325,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "buffer"
      ],
      "spread": false,
      "description": "keccak256 hash"
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "sign",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~sign",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Sign the message with account address and message signature",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "privateKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "contains message, messageHash, signature"
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "recover",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~recover",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "The aion address is the first 64 bytes of the signature",
    "lineNumber": 360,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the signing address"
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "encrypt",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~encrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": "Encrypt an account to keystore v3 format",
    "lineNumber": 384,
    "params": [
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "privateKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.kdf",
        "description": "pbkdf2 or scrypt"
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": true,
        "name": "options.salt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": true,
        "name": "options.iv",
        "description": "initialization vector"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.dklen",
        "description": "key length bytes"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.c",
        "description": "pbkdf2 c variable"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.n",
        "description": "scrypt n variable"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.r",
        "description": "scrypt r variable"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.p",
        "description": "scrypt p variable"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.scryptProgress",
        "description": "arguments (current, total, percent)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.cipher",
        "description": "algorithm"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.uuid",
        "description": "random bytes for id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "decrypt",
    "memberof": "src/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accounts.js~decrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 476,
    "undocument": true,
    "params": [
      {
        "name": "ksv3",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "nonStrict",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/batch-request.js",
    "content": "let series = require('async/series')\n\nfunction BatchRequest() {\n  this.steps = []\n}\n\nBatchRequest.prototype.add = function(step) {\n  this.steps.push(step)\n}\n\nBatchRequest.prototype.execute = function() {\n  let context = Object.assign({}, this.constructor, {batch: true})\n\n  // convert all steps into promise-to-callback functions\n  let steps = this.steps.map(item => done => {\n    item\n      // run the rpc method in series\n      .bind(context)\n      // the user gets a separate callback in batch mode\n      .then(() => done())\n      .catch(() => done())\n  })\n  // execute in series\n  series(steps)\n}\n\nmodule.exports = BatchRequest\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/batch-request.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "series",
    "memberof": "src/batch-request.js",
    "static": true,
    "longname": "src/batch-request.js~series",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/batch-request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "BatchRequest",
    "memberof": "src/batch-request.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/batch-request.js~BatchRequest",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/batch-request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "add",
    "memberof": "src/batch-request.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/batch-request.js~add",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/batch-request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "step",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "execute",
    "memberof": "src/batch-request.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/batch-request.js~execute",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/batch-request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/bzz.js",
    "content": "/*\n\nAion doesn't implement bzz\n\n*/\n\nfunction Bzz() {\n  throw new Error(`bzz isn't implemented on aion`)\n}\n\nmodule.exports = Bzz\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/bzz.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "Bzz",
    "memberof": "src/bzz.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bzz.js~Bzz",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/bzz.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/contract.js",
    "content": "let {EventEmitter} = require('events')\nlet {isObject} = require('underscore')\nlet {\n  inputLogFormatter,\n  inputCallFormatter,\n  inputDefaultBlockNumberFormatter,\n  inputTransactionFormatter\n} = require('./formatters')\nlet {assignExtend} = require('./extend')\nlet {hexToNumber} = require('./utils')\n// let {jsonInterfaceValidator} = require('./lib/contracts')\n\nlet methods = [\n  {\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [inputLogFormatter]\n    // outputFormatter: this._decodeEventABI.bind(subOptions.event)\n  },\n  {\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [inputCallFormatter],\n    outputFormatter: hexToNumber\n    // requestManager: _this._parent._requestManager,\n    // accounts: ethAccounts // is eth.accounts (necessary for wallet signing)\n    // defaultAccount: _this._parent.defaultAccount,\n    // defaultBlock: _this._parent.defaultBlock\n  },\n  {\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [inputCallFormatter, inputDefaultBlockNumberFormatter]\n    // add output formatter for decoding\n    /*outputFormatter: function(result) {\n      return _this._parent._decodeMethodReturn(_this._method.outputs, result)\n    },*/\n    // requestManager: _this._parent._requestManager,\n    // accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\n    // defaultAccount: _this._parent.defaultAccount,\n    // defaultBlock: _this._parent.defaultBlock\n  },\n  {\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [inputTransactionFormatter]\n    // requestManager: _this._parent._requestManager,\n    // accounts: _this.constructor._ethAccounts || _this._ethAccounts, // is eth.accounts (necessary for wallet signing)\n    // defaultAccount: _this._parent.defaultAccount,\n    // defaultBlock: _this._parent.defaultBlock,\n    // extraFormatters: extraFormatters\n  }\n]\n\nfunction Contract(jsonInterface, address, options) {\n  EventEmitter.call(this)\n  assignExtend(this, {methods})\n\n  /*let [valid, errors] = jsonInterfaceValidator(jsonInterface)\n\n  console.log('valid', valid)\n  console.log('errors', errors)*/\n\n  if (isObject(address) === true) {\n    this.options = address\n  }\n\n  this.address = address || null\n  this.options = options || {}\n\n  /*\n\n  allow users to automatically tack on their own methods\n\n  */\n\n  /*let handler = {\n    get(target, name) {\n      function contractMethod(args) {}\n    }\n  }\n\n  this.methods = new Proxy(this, handler)*/\n}\n\nContract.prototype = Object.create(EventEmitter.prototype)\n\nmodule.exports = Contract\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/contract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "isObject",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "inputLogFormatter",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~inputLogFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "hexToNumber",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~hexToNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/contract.js",
    "static": true,
    "longname": "src/contract.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "Contract",
    "memberof": "src/contract.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/contract.js~Contract",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/contract.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "jsonInterface",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/eth.js",
    "content": "let {EventEmitter} = require('events')\nlet {noop, each, isString} = require('underscore')\n\nlet {assignProvider} = require('./providers')\nlet {assignExtend} = require('./extend')\n\nlet BatchRequest = require('./batch-request')\nlet Contract = require('./contract')\nlet Iban = require('./iban')\nlet Accounts = require('./accounts')\nlet Net = require('./net')\nlet Personal = require('./personal')\n\nlet {hexToNumber, toChecksumAddress, numberToHex, isHex} = require('./utils')\n\nlet {\n  outputSyncingFormatter,\n  inputAddressFormatter,\n  inputDefaultBlockNumberFormatter,\n  inputBlockNumberFormatter,\n  outputBlockFormatter,\n  outputTransactionFormatter,\n  outputTransactionReceiptFormatter,\n  inputTransactionFormatter,\n  inputSignFormatter,\n  inputCallFormatter,\n  inputLogFormatter,\n  outputLogFormatter\n} = require('./formatters')\n\nlet hexSplit = (val, one, two) =>\n  isString(val) === true && isHex(val) === true ? one : two\n\nlet blockCall = ([val]) =>\n  hexSplit(val, 'eth_getBlockByHash', 'eth_getBlockByNumber')\n\nlet uncleCall = ([val]) =>\n  hexSplit(\n    val,\n    'eth_getUncleByBlockHashAndIndex',\n    'eth_getUncleByBlockNumberAndIndex'\n  )\n\nlet getBlockTransactionCountCall = ([val]) =>\n  hexSplit(\n    val,\n    'eth_getBlockTransactionCountByHash',\n    'eth_getBlockTransactionCountByNumber'\n  )\n\nlet uncleCountCall = ([val]) =>\n  hexSplit(\n    val,\n    'eth_getUncleCountByBlockHash',\n    'eth_getUncleCountByBlockNumber'\n  )\n\nlet transactionFromBlockCall = ([val]) =>\n  hexSplit(\n    val,\n    'eth_getTransactionByBlockHashAndIndex',\n    'eth_getTransactionByBlockNumberAndIndex'\n  )\n\nlet methods = [\n  {\n    name: 'getNodeInfo',\n    call: 'web3_clientVersion'\n  },\n  {\n    name: 'getProtocolVersion',\n    call: 'eth_protocolVersion',\n    params: 0\n  },\n  {\n    name: 'getCoinbase',\n    call: 'eth_coinbase',\n    params: 0\n  },\n  {\n    name: 'isMining',\n    call: 'eth_mining',\n    params: 0\n  },\n  {\n    name: 'getHashrate',\n    call: 'eth_hashrate',\n    params: 0\n    // outputFormatter: hexToNumber\n  },\n  {\n    name: 'isSyncing',\n    call: 'eth_syncing',\n    params: 0,\n    outputFormatter: outputSyncingFormatter\n  },\n  {\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n    // outputFormatter: outputBigNumberFormatter\n  },\n  {\n    name: 'getAccounts',\n    call: 'eth_accounts',\n    params: 0,\n    outputFormatter: val =>\n      val.length === 0 ? val : val.map(toChecksumAddress)\n  },\n  {\n    name: 'getBlockNumber',\n    call: 'eth_blockNumber',\n    params: 0,\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'getBalance',\n    call: 'eth_getBalance',\n    params: 2\n    // inputFormatter: [inputAddressFormatter, inputDefaultBlockNumberFormatter],\n    // outputFormatter: outputBigNumberFormatter\n  },\n  {\n    name: 'getStorageAt',\n    call: 'eth_getStorageAt',\n    params: 3,\n    inputFormatter: [\n      inputAddressFormatter,\n      numberToHex,\n      inputDefaultBlockNumberFormatter\n    ]\n  },\n  {\n    name: 'getCode',\n    call: 'eth_getCode',\n    params: 2,\n    inputFormatter: [inputAddressFormatter, inputDefaultBlockNumberFormatter]\n  },\n  {\n    name: 'getBlock',\n    call: blockCall,\n    params: 2,\n    inputFormatter: [\n      inputBlockNumberFormatter,\n      function(val) {\n        return !!val\n      }\n    ],\n    outputFormatter: outputBlockFormatter\n  },\n  {\n    name: 'getUncle',\n    call: uncleCall,\n    params: 2,\n    inputFormatter: [inputBlockNumberFormatter, numberToHex],\n    outputFormatter: outputBlockFormatter\n  },\n  {\n    name: 'getBlockTransactionCount',\n    call: getBlockTransactionCountCall,\n    params: 1,\n    inputFormatter: [inputBlockNumberFormatter],\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'getBlockUncleCount',\n    call: uncleCountCall,\n    params: 1,\n    inputFormatter: [inputBlockNumberFormatter],\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'getTransaction',\n    call: 'eth_getTransactionByHash',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: outputTransactionFormatter\n  },\n  {\n    name: 'getTransactionFromBlock',\n    call: transactionFromBlockCall,\n    params: 2,\n    inputFormatter: [inputBlockNumberFormatter, numberToHex],\n    outputFormatter: outputTransactionFormatter\n  },\n  {\n    name: 'getTransactionReceipt',\n    call: 'eth_getTransactionReceipt',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: outputTransactionReceiptFormatter\n  },\n  {\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [inputAddressFormatter, inputDefaultBlockNumberFormatter],\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'sendSignedTransaction',\n    call: 'eth_sendRawTransaction',\n    params: 1,\n    inputFormatter: [null]\n  },\n  {\n    name: 'signTransaction',\n    call: 'eth_signTransaction',\n    params: 1,\n    inputFormatter: [inputTransactionFormatter]\n  },\n  {\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [inputTransactionFormatter]\n  },\n  {\n    name: 'sign',\n    call: 'eth_sign',\n    params: 2,\n    inputFormatter: [inputSignFormatter, inputAddressFormatter],\n    transformPayload: function(payload) {\n      payload.params.reverse()\n      return payload\n    }\n  },\n  {\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [inputCallFormatter, inputDefaultBlockNumberFormatter]\n  },\n  {\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [inputCallFormatter],\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'getCompilers',\n    call: 'eth_getCompilers',\n    params: 0\n  },\n  {\n    name: 'compile.solidity',\n    call: 'eth_compileSolidity',\n    params: 1\n  },\n  {\n    name: 'compile.lll',\n    call: 'eth_compileLLL',\n    params: 1\n  },\n  {\n    name: 'compile.serpent',\n    call: 'eth_compileSerpent',\n    params: 1\n  },\n  {\n    name: 'submitWork',\n    call: 'eth_submitWork',\n    params: 3\n  },\n  {\n    name: 'getWork',\n    call: 'eth_getWork',\n    params: 0\n  },\n  {\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [inputLogFormatter],\n    outputFormatter: outputLogFormatter\n  }\n]\n\nfunction Eth(provider, providerOpts) {\n  this._subscriptions = []\n\n  assignProvider(this, {provider, providerOpts})\n  assignExtend(this, {methods})\n\n  this.defaultAccount = null\n  this.defaultBlock = 'latest'\n  this.net = new Net()\n  this.personal = new Personal()\n  this.personal.setProvider(this.currentProvider)\n\n  this.accounts = new Accounts()\n}\n\nEth.prototype.Iban = Iban\nEth.prototype.Contract = Contract\nEth.prototype.BatchRequest = BatchRequest\n\n/**\n * Subscribe to server events\n *\n * Subscribe to these events:\n * + pendingTransactions\n * + newBlockHeaders\n * + syncing\n * + logs, options {fromBlock, address, topics}\n *\n * Emitter events:\n * + data, object\n * + change, object\n * + error, Error\n *\n * @param {string} evtName event name\n * @param {object} [opts]\n * @param {number} opts.fromBlock\n * @param {string|array} opts.address\n * @param {array} opts.topics\n * @param {function} done\n * @return {object}\n */\nEth.prototype.subscribe = function(evtName, opts, done) {\n  let sub = new EventEmitter()\n  sub.id = Math.random()\n    .toString()\n    .substring(2)\n  sub.evtName = evtName\n  sub.options = opts\n\n  if (opts === undefined && done === undefined) {\n    opts = {}\n    done = noop\n  }\n\n  if (typeof opts === 'function') {\n    done = opts\n    opts = {}\n  }\n\n  sub.subscribe = done => {\n    done()\n  }\n\n  sub.unsubscribe = done => {\n    done()\n  }\n\n  sub.arguments = arguments\n\n  this._subscriptions.push(sub)\n\n  return sub\n}\n\n/**\n * Unsubscribe on this instance of Eth\n * @param {boolean} keepSyncing clear all except syncing\n * @return {boolean}\n */\nEth.prototype.clearSubscriptions = function(keepSyncing = false) {\n  each(this._subscriptions, item => {\n    if (keepSyncing === true && item.evtName === 'syncing') {\n      return\n    }\n    item.unsubscribe()\n  })\n  return true\n}\n\nmodule.exports = Eth\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/eth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "noop",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~noop",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "assignProvider",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "BatchRequest",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~BatchRequest",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "Contract",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~Contract",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "Iban",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~Iban",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "Accounts",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~Accounts",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "Net",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~Net",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "Personal",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~Personal",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "hexToNumber",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~hexToNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "outputSyncingFormatter",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~outputSyncingFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "hexSplit",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~hexSplit",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      },
      {
        "name": "one",
        "types": [
          "*"
        ]
      },
      {
        "name": "two",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "blockCall",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~blockCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "uncleCall",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~uncleCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "getBlockTransactionCountCall",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~getBlockTransactionCountCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "uncleCountCall",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~uncleCountCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "transactionFromBlockCall",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~transactionFromBlockCall",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/eth.js",
    "static": true,
    "longname": "src/eth.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "Eth",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~Eth",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 280,
    "undocument": true,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "providerOpts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "subscribe",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~subscribe",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": "Subscribe to server events\n\nSubscribe to these events:\n+ pendingTransactions\n+ newBlockHeaders\n+ syncing\n+ logs, options {fromBlock, address, topics}\n\nEmitter events:\n+ data, object\n+ change, object\n+ error, Error",
    "lineNumber": 321,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "evtName",
        "description": "event name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.fromBlock",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.address",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.topics",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "done",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "clearSubscriptions",
    "memberof": "src/eth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/eth.js~clearSubscriptions",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/eth.js",
    "importStyle": null,
    "description": "Unsubscribe on this instance of Eth",
    "lineNumber": 359,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "keepSyncing",
        "description": "clear all except syncing"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "src/extend.js",
    "content": "let get = require('lodash/get')\nlet set = require('lodash/set')\nlet {each, isFunction, isEmpty} = require('underscore')\n\n// the simplest imput formatter 😉\nlet simpleGetValue = val => val\n\nfunction assignExtend(context, {methods = []}) {\n  // Gives web3, eth, bzz, and etc. rpc methods\n  function createRpcMethod({\n    // name,\n    call,\n    // params count\n    params,\n    inputFormatter,\n    outputFormatter\n  }) {\n    let paramCount = params\n\n    return function createRpcMethodInner(...args) {\n      let req = {}\n      let done\n      let provider = context.currentProvider\n      // the method can be a function\n      let method = typeof call === 'function' ? call(args) : call\n      let params = []\n      // batch request applies this with context\n      let batch = get(this, 'batch') || false\n\n      // args = Array.from(args)\n\n      if (isFunction(args[args.length - 1]) === true) {\n        // the last arg is a callback\n        done = args.pop()\n      }\n\n      // expecting array but...\n      let formatters = inputFormatter\n\n      // always turn it into an array even with one arg\n      if (isFunction(formatters) === true) {\n        formatters = [formatters]\n      }\n\n      for (let i = 0; i < paramCount; i += 1) {\n        let arg = args[i] || null\n        let formatter = formatters[i] || simpleGetValue\n        params[i] = formatter.call(req, arg)\n      }\n\n      // this params is the rpc call arguments as an array\n      let payload = {method, params}\n\n      let preDone = val => {\n        if (outputFormatter !== undefined && val !== undefined) {\n          return outputFormatter.call(req, val)\n        }\n\n        return val\n      }\n\n      // promise api\n      if (done === undefined || batch === true) {\n        return new Promise((resolve, reject) => {\n          provider.send(payload, (err, res) => {\n            if (err !== null && err !== undefined) {\n              // batch mode is like a promise-callback combo\n              if (batch === true && isEmpty(done) === false) {\n                done(err)\n              }\n              return reject(err)\n            }\n\n            let {error, result} = res\n\n            if (error !== null && error !== undefined) {\n              let msg\n              if (typeof error === 'object') {\n                msg = Object.keys(error)\n                  .map(key => `${key}: ${JSON.stringify(error[key])}`)\n                  .join(',')\n              }\n\n              if (typeof error === 'string') {\n                msg = error\n              }\n\n              msg = `server error ${msg}`\n              // batch mode is like a promise-callback combo\n              if (batch === true && isEmpty(done) === false) {\n                done(err)\n              }\n              return reject(new Error(msg))\n            }\n\n            let op = preDone(result)\n            // batch mode is like a promise-callback combo\n            if (isFunction(done) === true) {\n              done(op)\n            }\n            resolve(op)\n          })\n        })\n      }\n\n      // callback api\n      provider.send(payload, (err, res) => {\n        if (err !== null && err !== undefined) {\n          return done(err)\n        }\n\n        // console.log('res', res)\n        done(null, preDone(res.result))\n      })\n    }\n  }\n\n  context.extend = ({property, methods}) => {\n    each(methods, item => {\n      let path = `${item.name}`\n\n      if (property !== undefined) {\n        path = `${property}.${path}`\n      }\n\n      set(context, path, createRpcMethod(item))\n    })\n  }\n\n  context.extend({methods})\n}\n\nmodule.exports = {assignExtend}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/extend.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "get",
    "memberof": "src/extend.js",
    "static": true,
    "longname": "src/extend.js~get",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/extend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "set",
    "memberof": "src/extend.js",
    "static": true,
    "longname": "src/extend.js~set",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/extend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "each",
    "memberof": "src/extend.js",
    "static": true,
    "longname": "src/extend.js~each",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/extend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "simpleGetValue",
    "memberof": "src/extend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/extend.js~simpleGetValue",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/extend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "assignExtend",
    "memberof": "src/extend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/extend.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/extend.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"methods\": *}"
        ],
        "defaultRaw": {
          "methods": null
        },
        "defaultValue": "{\"methods\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "src/formatters.js",
    "content": "let {isString, isNumber, isObject, isArray, isEmpty} = require('underscore')\nlet {isAccountAddress} = require('./lib/accounts')\nlet {prependZeroX, removeLeadingZeroX} = require('./lib/formats')\nlet {\n  toBN,\n  isHexStrict,\n  numberToHex,\n  isHex,\n  utf8ToHex,\n  hexToNumber,\n  hexToUtf8,\n  toChecksumAddress,\n  sha3\n} = require('./utils')\nlet Iban = require('./iban')\n\nlet outputBigNumberFormatter = val => toBN(val).toString(10)\n\nlet isPredefinedBlockNumber = val =>\n  val === 'latest' || val === 'pending' || val === 'earliest'\n\nfunction inputDefaultBlockNumberFormatter(val) {\n  if (this && (val === undefined || val === null)) {\n    return this.defaultBlock\n  }\n  if (val === 'genesis' || val === 'earliest') {\n    return '0x0'\n  }\n  return inputBlockNumberFormatter(val)\n}\n\nfunction inputBlockNumberFormatter(val) {\n  if (val === undefined) {\n    return undefined\n  } else if (isPredefinedBlockNumber(val)) {\n    return val\n  }\n\n  if (isHexStrict(val) === true) {\n    return isString(val) === true ? val.toLowerCase() : val\n  }\n\n  return numberToHex(val)\n}\n\nfunction txInputFormatter(options) {\n  if (options.to) {\n    // it might be contract creation\n    options.to = inputAddressFormatter(options.to)\n  }\n\n  if (options.data && options.input) {\n    throw new Error(\n      'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.'\n    )\n  }\n\n  if (!options.data && options.input) {\n    options.data = options.input\n    delete options.input\n  }\n\n  if (options.data && !isHex(options.data)) {\n    throw new Error('The data field must be HEX encoded data.')\n  }\n\n  // allow both\n  if (options.gas || options.gasLimit) {\n    options.gas = options.gas || options.gasLimit\n  }\n\n  ;['gasPrice', 'gas', 'value', 'nonce']\n    .filter(function(key) {\n      return options[key] !== undefined\n    })\n    .forEach(function(key) {\n      options[key] = numberToHex(options[key])\n    })\n\n  return options\n}\n\nfunction inputCallFormatter(options) {\n  options = txInputFormatter(options)\n\n  let from = options.from || (this ? this.defaultAccount : null)\n\n  if (from) {\n    options.from = inputAddressFormatter(from)\n  }\n\n  return options\n}\n\nfunction inputTransactionFormatter(options) {\n  options = txInputFormatter(options)\n\n  // check from, only if not number, or object\n  if (!isNumber(options.from) && !isObject(options.from)) {\n    options.from = options.from || (this ? this.defaultAccount : null)\n\n    if (!options.from && !isNumber(options.from)) {\n      throw new Error('The send transactions \"from\" field must be defined!')\n    }\n\n    options.from = inputAddressFormatter(options.from)\n  }\n\n  return options\n}\n\nfunction inputSignFormatter(data) {\n  return isHexStrict(data) ? data : utf8ToHex(data)\n}\n\nfunction outputTransactionFormatter(tx) {\n  if (tx.blockNumber !== null) tx.blockNumber = hexToNumber(tx.blockNumber)\n  if (tx.transactionIndex !== null)\n    tx.transactionIndex = hexToNumber(tx.transactionIndex)\n  tx.nonce = hexToNumber(tx.nonce)\n  tx.gas = hexToNumber(tx.gas)\n  tx.gasPrice = outputBigNumberFormatter(tx.gasPrice)\n  tx.value = outputBigNumberFormatter(tx.value)\n\n  if (tx.to && isAccountAddress(tx.to)) {\n    // tx.to could be `0x0` or `null` while contract creation\n    tx.to = toChecksumAddress(tx.to)\n  } else {\n    tx.to = null // set to `null` if invalid address\n  }\n\n  if (tx.from) {\n    tx.from = toChecksumAddress(tx.from)\n  }\n\n  return tx\n}\n\nfunction outputTransactionReceiptFormatter(receipt) {\n  if (typeof receipt !== 'object') {\n    throw new Error('Received receipt is invalid: ' + receipt)\n  }\n\n  if (receipt.blockNumber !== null)\n    receipt.blockNumber = hexToNumber(receipt.blockNumber)\n  if (receipt.transactionIndex !== null)\n    receipt.transactionIndex = hexToNumber(receipt.transactionIndex)\n  receipt.cumulativeGasUsed = hexToNumber(receipt.cumulativeGasUsed)\n  receipt.gasUsed = hexToNumber(receipt.gasUsed)\n\n  if (isArray(receipt.logs)) {\n    receipt.logs = receipt.logs.map(outputLogFormatter)\n  }\n\n  if (receipt.contractAddress) {\n    receipt.contractAddress = toChecksumAddress(receipt.contractAddress)\n  }\n\n  if (typeof receipt.status !== 'undefined') {\n    receipt.status = Boolean(parseInt(receipt.status))\n  }\n\n  return receipt\n}\n\nfunction outputBlockFormatter(block) {\n  // transform to number\n  block.gasLimit = hexToNumber(block.gasLimit)\n  block.gasUsed = hexToNumber(block.gasUsed)\n  block.size = hexToNumber(block.size)\n  block.timestamp = hexToNumber(block.timestamp)\n  if (block.number !== null) block.number = hexToNumber(block.number)\n\n  if (block.difficulty)\n    block.difficulty = outputBigNumberFormatter(block.difficulty)\n  if (block.totalDifficulty)\n    block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty)\n\n  if (isArray(block.transactions)) {\n    block.transactions.forEach(function(item) {\n      if (!isString(item)) return outputTransactionFormatter(item)\n    })\n  }\n\n  if (block.miner) block.miner = toChecksumAddress(block.miner)\n\n  return block\n}\n\nfunction inputLogFormatter(options) {\n  function toTopic(value) {\n    if (value === null || typeof value === 'undefined') return null\n\n    value = String(value)\n\n    if (value.indexOf('0x') === 0) return value\n    else return utf8ToHex(value)\n  }\n\n  // make sure topics, get converted to hex\n  options.topics = options.topics || []\n  options.topics = options.topics.map(function(topic) {\n    return isArray(topic) ? topic.map(toTopic) : toTopic(topic)\n  })\n\n  if (isEmpty(options.address) === false) {\n    if (isArray(options.address) === true) {\n      options.address = options.address.map(function(addr) {\n        return inputAddressFormatter(addr)\n      })\n    } else {\n      options.address = inputAddressFormatter(options.address)\n    }\n  }\n\n  return options\n}\n\nfunction outputLogFormatter(log) {\n  // generate a custom log id\n  if (\n    typeof log.blockHash === 'string' &&\n    typeof log.transactionHash === 'string' &&\n    typeof log.logIndex === 'string'\n  ) {\n    let shaId = sha3(\n      log.blockHash.replace('0x', '') +\n        log.transactionHash.replace('0x', '') +\n        log.logIndex.replace('0x', '')\n    )\n    log.id = 'log_' + shaId.replace('0x', '').substr(0, 8)\n  } else if (!log.id) {\n    log.id = null\n  }\n\n  if (log.blockNumber !== null) log.blockNumber = hexToNumber(log.blockNumber)\n  if (log.transactionIndex !== null)\n    log.transactionIndex = hexToNumber(log.transactionIndex)\n  if (log.logIndex !== null) log.logIndex = hexToNumber(log.logIndex)\n\n  if (log.address) {\n    log.address = toChecksumAddress(log.address)\n  }\n\n  return log\n}\n\nfunction inputPostFormatter(post) {\n  // post.payload = toHex(post.payload);\n\n  if (post.ttl) post.ttl = numberToHex(post.ttl)\n  if (post.workToProve) post.workToProve = numberToHex(post.workToProve)\n  if (post.priority) post.priority = numberToHex(post.priority)\n\n  // fallback\n  if (!isArray(post.topics)) {\n    post.topics = post.topics ? [post.topics] : []\n  }\n\n  // format the following options\n  post.topics = post.topics.map(function(topic) {\n    // convert only if not hex\n    return topic.indexOf('0x') === 0 ? topic : utf8ToHex(topic)\n  })\n\n  return post\n}\n\n/**\n * Formats the output of a received post message\n *\n * @param {object} post\n * @returns {object}\n */\nfunction outputPostFormatter(post) {\n  post.expiry = hexToNumber(post.expiry)\n  post.sent = hexToNumber(post.sent)\n  post.ttl = hexToNumber(post.ttl)\n  post.workProved = hexToNumber(post.workProved)\n  // post.payloadRaw = post.payload;\n  // post.payload = hexToAscii(post.payload);\n\n  // if (isJson(post.payload)) {\n  //     post.payload = JSON.parse(post.payload);\n  // }\n\n  // format the following options\n  if (!post.topics) {\n    post.topics = []\n  }\n  post.topics = post.topics.map(function(topic) {\n    return hexToUtf8(topic)\n  })\n\n  return post\n}\n\nfunction inputAddressFormatter(ibanAddress) {\n  let iban = new Iban(ibanAddress)\n  if (iban.isValid() === true && iban.isDirect() === true) {\n    return iban.toAddress().toLowerCase()\n  } else if (isAccountAddress(ibanAddress) === true) {\n    return prependZeroX(removeLeadingZeroX(ibanAddress.toLowerCase()))\n  }\n  throw new Error(\n    'Provided ibanAddress \"' +\n      ibanAddress +\n      '\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can\\'t be converted.'\n  )\n}\n\nfunction outputSyncingFormatter(result) {\n  result.startingBlock = hexToNumber(result.startingBlock)\n  result.currentBlock = hexToNumber(result.currentBlock)\n  result.highestBlock = hexToNumber(result.highestBlock)\n  if (result.knownStates) {\n    result.knownStates = hexToNumber(result.knownStates)\n    result.pulledStates = hexToNumber(result.pulledStates)\n  }\n\n  return result\n}\n\nmodule.exports = {\n  outputBigNumberFormatter,\n  isPredefinedBlockNumber,\n  inputDefaultBlockNumberFormatter,\n  inputBlockNumberFormatter,\n  inputCallFormatter,\n  inputTransactionFormatter,\n  inputSignFormatter,\n  outputTransactionFormatter,\n  outputTransactionReceiptFormatter,\n  outputBlockFormatter,\n  inputLogFormatter,\n  outputLogFormatter,\n  inputPostFormatter,\n  outputPostFormatter,\n  inputAddressFormatter,\n  outputSyncingFormatter\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/formatters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/formatters.js",
    "static": true,
    "longname": "src/formatters.js~isString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "isAccountAddress",
    "memberof": "src/formatters.js",
    "static": true,
    "longname": "src/formatters.js~isAccountAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "prependZeroX",
    "memberof": "src/formatters.js",
    "static": true,
    "longname": "src/formatters.js~prependZeroX",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "toBN",
    "memberof": "src/formatters.js",
    "static": true,
    "longname": "src/formatters.js~toBN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "Iban",
    "memberof": "src/formatters.js",
    "static": true,
    "longname": "src/formatters.js~Iban",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "outputBigNumberFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputBigNumberFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "isPredefinedBlockNumber",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~isPredefinedBlockNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "inputDefaultBlockNumberFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputDefaultBlockNumberFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "inputBlockNumberFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputBlockNumberFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "txInputFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~txInputFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "inputCallFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputCallFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "inputTransactionFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputTransactionFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "inputSignFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputSignFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "outputTransactionFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputTransactionFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "tx",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "outputTransactionReceiptFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputTransactionReceiptFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "receipt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "outputBlockFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputBlockFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "params": [
      {
        "name": "block",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "inputLogFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputLogFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "outputLogFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputLogFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "log",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "inputPostFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputPostFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "params": [
      {
        "name": "post",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "outputPostFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputPostFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": "Formats the output of a received post message",
    "lineNumber": 275,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "inputAddressFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~inputAddressFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "params": [
      {
        "name": "ibanAddress",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "outputSyncingFormatter",
    "memberof": "src/formatters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/formatters.js~outputSyncingFormatter",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/formatters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "params": [
      {
        "name": "result",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/http-provider.js",
    "content": "let fetch = require('cross-fetch')\nlet values = require('./lib/values')\n\nlet method = 'POST'\n\nlet headers = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n}\n\nfunction HttpProvider(url = values.rpc.url, opts = {}) {\n  this.url = url\n  this.opts = opts\n}\n\nHttpProvider.prototype.send = function(payload, done) {\n  let body = JSON.stringify(payload)\n  let url = this.url\n  let fetchOpts = Object.assign({}, this.opts, {\n    method,\n    headers,\n    body\n  })\n\n  fetch(url, fetchOpts)\n    .then(res => res.json())\n    .then(res => done(null, res))\n    .catch(done)\n}\n\nmodule.exports = HttpProvider\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/http-provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "fetch",
    "memberof": "src/http-provider.js",
    "static": true,
    "longname": "src/http-provider.js~fetch",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "values",
    "memberof": "src/http-provider.js",
    "static": true,
    "longname": "src/http-provider.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "method",
    "memberof": "src/http-provider.js",
    "static": true,
    "longname": "src/http-provider.js~method",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "variable",
    "name": "headers",
    "memberof": "src/http-provider.js",
    "static": true,
    "longname": "src/http-provider.js~headers",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"Accept\": string, \"Content-Type\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "HttpProvider",
    "memberof": "src/http-provider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/http-provider.js~HttpProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "send",
    "memberof": "src/http-provider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/http-provider.js~send",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/http-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "done",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/iban.js",
    "content": "function Iban() {}\n\n// Iban.prototype = Object.create(Base.prototype)\n\nIban.prototype.toAddress = function() {}\nIban.prototype.toIban = function() {}\nIban.prototype.fromEthereumAddress = function() {}\nIban.prototype.fromBban = function() {}\nIban.prototype.createIndirect = function() {}\nIban.prototype.isValid = function() {}\nIban.prototype.isDirect = function() {}\nIban.prototype.isIndirect = function() {}\nIban.prototype.checksum = function() {}\nIban.prototype.institution = function() {}\nIban.prototype.client = function() {}\nIban.prototype.toString = function() {}\n\nmodule.exports = Iban\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/iban.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "Iban",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~Iban",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "toAddress",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~toAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "toIban",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~toIban",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "fromEthereumAddress",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~fromEthereumAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "fromBban",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~fromBban",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "createIndirect",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~createIndirect",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "isValid",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~isValid",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "isDirect",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~isDirect",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "isIndirect",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~isIndirect",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "checksum",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~checksum",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "institution",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~institution",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "client",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~client",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "toString",
    "memberof": "src/iban.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/iban.js~toString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/iban.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "src/index.js",
    "content": "// helpers\nlet {assignExtend} = require('./extend.js')\nlet {assignProvider} = require('./providers.js')\nlet utils = require('./utils.js')\n\n// constructors\nlet BatchRequest = require('./batch-request.js')\nlet Bzz = require('./bzz.js')\nlet Eth = require('./eth.js')\nlet HttpProvider = require('./http-provider')\nlet WebsocketProvider = require('./websocket-provider')\nlet IpcProvider = require('./ipc-provider')\nlet Net = require('./net.js')\nlet Personal = require('./personal.js')\nlet Shh = require('./shh.js')\n\nlet methods = []\n\nfunction Web3(provider, providerOpts = {}) {\n  assignProvider(this, {provider, providerOpts})\n  assignExtend(this, {methods})\n\n  this.eth = new Eth()\n  this.eth.setProvider(this.currentProvider)\n\n  this.net = new Net()\n  this.net.setProvider(this.currentProvider)\n\n  this.BatchRequest = BatchRequest\n  this.utils = utils\n\n  Object.defineProperty(this, 'bzz', {\n    get: function() {\n      throw new Error(`aion doesn't implement bzz`)\n    }\n  })\n\n  Object.defineProperty(this, 'shh', {\n    get: function() {\n      throw new Error(`aion doesn't implement bzz`)\n    }\n  })\n}\n\n//\n// Web3 instance memembers\n//\n\nWeb3.prototype.version = '1.0.0'\n\nWeb3.prototype.modules = {\n  Eth,\n  Net,\n  Personal,\n  Bzz,\n  Shh\n}\n\nWeb3.prototype.providers = {\n  HttpProvider,\n  WebsocketProvider,\n  IpcProvider\n}\n\n//\n// Web3 static members\n//\n\nWeb3.version = '1.0.0'\nWeb3.utils = utils\n\nWeb3.modules = {\n  Eth,\n  Net,\n  Personal,\n  Bzz,\n  Shh\n}\n\nWeb3.providers = {\n  HttpProvider,\n  WebsocketProvider,\n  IpcProvider\n}\n\nmodule.exports = Web3\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "assignProvider",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "utils",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~utils",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "BatchRequest",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~BatchRequest",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "variable",
    "name": "Bzz",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Bzz",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "variable",
    "name": "Eth",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Eth",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "HttpProvider",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~HttpProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "WebsocketProvider",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~WebsocketProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "IpcProvider",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~IpcProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "Net",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Net",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "Personal",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Personal",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "Shh",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Shh",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "Web3",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~Web3",
    "access": "public",
    "export": false,
    "importPath": "aion-web3",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "providerOpts",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "src/ipc-provider.js",
    "content": "// let net = require('net')\n\nfunction IpcProvider(url, net) {\n  this.url = url\n  this.net = net\n}\n\nIpcProvider.prototype.send = function(/*payload, done*/) {\n  // net send payload\n}\n\nmodule.exports = IpcProvider\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/ipc-provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "IpcProvider",
    "memberof": "src/ipc-provider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ipc-provider.js~IpcProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/ipc-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "net",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "send",
    "memberof": "src/ipc-provider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ipc-provider.js~send",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/ipc-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/lib/accounts.js",
    "content": "let {isString, isEmpty, isArray} = require('underscore')\nlet patterns = require('./patterns')\nlet values = require('./values')\nlet {blake2b256, keccak256} = require('./crypto')\nlet {\n  prependZeroX,\n  removeLeadingZeroX,\n  hexToBuffer,\n  randomHexBuffer,\n  Buffer,\n  toBuffer\n} = require('./formats')\n\nfunction createPrivateKey(entropy) {\n  if (isEmpty(entropy) === true) {\n    entropy = randomHexBuffer()\n  }\n  let pk = keccak256(Buffer.concat([randomHexBuffer(), entropy]))\n  pk = hexToBuffer(pk)\n  pk = keccak256(Buffer.concat([randomHexBuffer(), pk]))\n  pk = hexToBuffer(pk)\n  return pk\n}\n\nlet isPrivateKey = val =>\n  (isArray(val) === true || Buffer.isBuffer(val) === true) && val.length > 0\n\nfunction createA0Address(privateKey) {\n  let pkHash = Buffer.from(blake2b256(privateKey))\n  return Buffer.concat([values.addresses.identifier, pkHash], 32)\n}\n\nlet createA0AddressString = val => prependZeroX(val.toString('hex'))\n\nfunction isAccountAddress(val) {\n  if (isEmpty(val) === true || isString(val) === false) {\n    return false\n  }\n\n  return patterns.address.test(val) === true\n}\n\nfunction createChecksumAddress(val) {\n  let address = removeLeadingZeroX(val)\n  let addressHash = keccak256(toBuffer(address.toLowerCase())).toString('hex')\n\n  return prependZeroX(\n    addressHash\n      .split('')\n      .map(item => parseInt(item, 16))\n      .map((item, index) => {\n        let char = address[index]\n        if (isNaN(char) === false) {\n          // numeric\n          return char\n        }\n        return item > 7 ? char.toUpperCase() : char.toLowerCase()\n      })\n      .join('')\n  )\n}\n\nlet isValidChecksumAddress = val => val === createChecksumAddress(val)\n\nfunction equalAddresses(addr1, addr2) {\n  return (\n    removeLeadingZeroX(addr1.toLowerCase()) ===\n    removeLeadingZeroX(addr2.toLowerCase())\n  )\n}\n\nmodule.exports = {\n  createPrivateKey,\n  isPrivateKey,\n  createA0Address,\n  createA0AddressString,\n  isAccountAddress,\n  createChecksumAddress,\n  isValidChecksumAddress,\n  equalAddresses\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/accounts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/lib/accounts.js",
    "static": true,
    "longname": "src/lib/accounts.js~isString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "patterns",
    "memberof": "src/lib/accounts.js",
    "static": true,
    "longname": "src/lib/accounts.js~patterns",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "values",
    "memberof": "src/lib/accounts.js",
    "static": true,
    "longname": "src/lib/accounts.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "blake2b256",
    "memberof": "src/lib/accounts.js",
    "static": true,
    "longname": "src/lib/accounts.js~blake2b256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "prependZeroX",
    "memberof": "src/lib/accounts.js",
    "static": true,
    "longname": "src/lib/accounts.js~prependZeroX",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "createPrivateKey",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~createPrivateKey",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "entropy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "isPrivateKey",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~isPrivateKey",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "createA0Address",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~createA0Address",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "privateKey",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "createA0AddressString",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~createA0AddressString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "isAccountAddress",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~isAccountAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "createChecksumAddress",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~createChecksumAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "isValidChecksumAddress",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~isValidChecksumAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "equalAddresses",
    "memberof": "src/lib/accounts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/accounts.js~equalAddresses",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/accounts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "addr1",
        "types": [
          "*"
        ]
      },
      {
        "name": "addr2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "src/lib/contracts.js",
    "content": "let {createValidator} = require('./validators')\n\nlet jsonInterfaceSchema = {\n  type: 'object',\n  properties: {\n    type: {fn: true},\n    name: {type: 'string'},\n    constant: {type: 'boolean'},\n    payable: {type: 'boolean'},\n    stateMutability: {\n      type: 'string',\n      enum: ['pure', 'view', 'constant', 'nonpayable', 'payable']\n    },\n    inputs: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          name: {type: 'string'},\n          type: {type: 'string'}\n        }\n      }\n    },\n    outputs: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          name: {type: 'string'},\n          type: {type: 'string'}\n        }\n      }\n    }\n  }\n}\n\nlet jsonInterfaceValidator = createValidator(jsonInterfaceSchema)\n\nmodule.exports = {jsonInterfaceValidator}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/contracts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "createValidator",
    "memberof": "src/lib/contracts.js",
    "static": true,
    "longname": "src/lib/contracts.js~createValidator",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "jsonInterfaceSchema",
    "memberof": "src/lib/contracts.js",
    "static": true,
    "longname": "src/lib/contracts.js~jsonInterfaceSchema",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "jsonInterfaceValidator",
    "memberof": "src/lib/contracts.js",
    "static": true,
    "longname": "src/lib/contracts.js~jsonInterfaceValidator",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/contracts.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/lib/crypto.js",
    "content": "/*\n\nall these functions should work with a byte array while in other places\nthere is a lot of monkey-business about 0x, strings, hex, and etc.\n\n*/\n\nlet {Buffer} = require('safe-buffer')\nlet blake2b = require('blake2b')\nlet jsSha3 = require('js-sha3')\nlet nacl = require('tweetnacl')\nlet node =\n  typeof global === 'undefined'\n    ? require('crypto-browserify')\n    : require('crypto')\nlet scrypt = require('scryptsy')\n\nfunction keccak256(val) {\n  return Buffer.from(jsSha3.keccak256(val), 'hex')\n}\n\nfunction blake2b128(val) {\n  // 16\n  let out = Buffer.alloc(blake2b.BYTES_MIN)\n  return blake2b(blake2b.BYTES_MIN)\n    .update(val)\n    .digest(out)\n}\n\nfunction blake2b256(val) {\n  // 32\n  let out = Buffer.alloc(blake2b.BYTES)\n  blake2b(blake2b.BYTES)\n    .update(val)\n    .digest(out)\n  return out\n}\n\nmodule.exports = {\n  keccak256,\n  blake2b128,\n  blake2b256,\n  nacl,\n  node,\n  scrypt\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/crypto.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "Buffer",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~Buffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "blake2b",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~blake2b",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "jsSha3",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~jsSha3",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "variable",
    "name": "nacl",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~nacl",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "node",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~node",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "scrypt",
    "memberof": "src/lib/crypto.js",
    "static": true,
    "longname": "src/lib/crypto.js~scrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "keccak256",
    "memberof": "src/lib/crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/crypto.js~keccak256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "blake2b128",
    "memberof": "src/lib/crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/crypto.js~blake2b128",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "blake2b256",
    "memberof": "src/lib/crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/crypto.js~blake2b256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/lib/eth.js",
    "content": "",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/eth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/lib/formats.js",
    "content": "let randomHex = require('randomhex')\nlet numberToBn = require('number-to-bn')\nlet {Buffer} = require('safe-buffer')\nlet {isEmpty, isArray, isString, isNumber} = require('underscore')\nlet BN = require('bn.js')\nlet values = require('./values')\nlet patterns = require('./patterns')\n\nlet copyString = val => '' + val\n\n/**\n * True if string starts with '0x'\n * @param {string} val\n * @return {boolean}\n */\nlet startsWithZeroX = val =>\n  isString(val) === true && patterns.zeroX.test(val) === true\n\n/**\n * Removes '0x' from a string\n * @private\n * @param {string} val\n * @return {string}checkAddressChecksum\n */\nlet removeLeadingZeroX = val =>\n  startsWithZeroX(val) === true ? val.replace(patterns.zeroX, '') : val\n\n/**\n * Put the 0x at the beginning of a string\n * @private\n * @param {string} val\n * @return {string}\n */\nlet prependZeroX = val =>\n  startsWithZeroX(val) === false ? values.zeroX + val : val\n\n/**\n * Strips '0x' and turns it into a Buffer\n * @param {string} val [description]\n * @return {buffer} [description]\n */\nlet hexToBuffer = val => toBuffer(val)\n\n/**\n * Random Buffer of a size\n * @param {number} size\n * @return {buffer}\n */\nlet randomHexBuffer = (size = values.hex.randomHexSize) =>\n  hexToBuffer(randomHex(size))\n\n/**\n * True if a string is hex\n * @param {string} val\n * @return {boolean}\n */\nlet isHex = val => isString(val) === true && patterns.hex.test(val) === true\n\n/**\n * True if two buffers have the same length and bytes\n * @param {buffer} buf1\n * @param {buffer} buf2\n * @return {boolean}\n */\nfunction equalBuffers(buf1, buf2) {\n  if (buf1.length !== buf2.length) {\n    return false\n  }\n\n  return buf1.every((byte, index) => {\n    return (buf2[index] = byte)\n  })\n}\n\n/**\n * Gracefully try to convert anything into a buffer\n * @param {object} val anything\n * @param {string} encoding hex, base64, utf8\n * @return {buffer}\n */\nfunction toBuffer(val, encoding) {\n  // buffer or array\n  if (isArray(val) === true || Buffer.isBuffer(val) === true) {\n    return Buffer.from(val)\n  }\n\n  if (isNaN(val) === false || isNumber(val) === true || BN.isBN(val) === true) {\n    return Buffer.from(numberToBn(val).toString('hex'), 'hex')\n  }\n\n  // string\n  if (isString(val) === true && isEmpty(encoding) === true) {\n    // hex\n    if (isHex(val) === true) {\n      return Buffer.from(removeLeadingZeroX(val), 'hex')\n    }\n\n    // base64\n    if (patterns.base64.test(val) === true) {\n      return Buffer.from(val, 'base64')\n    }\n  }\n\n  // anything else\n  return Buffer.from(val, encoding)\n}\n\nlet isBuffer = val => Buffer.isBuffer(val)\n\nfunction toNumber(val) {\n  if (typeof val === 'number') {\n    return val\n  }\n\n  if (isHex(val) === true) {\n    return new BN(removeLeadingZeroX(val), 'hex').toNumber()\n  }\n\n  if (BN.isBN(val) === true) {\n    return val.toNumber()\n  }\n\n  throw new Error(`unknown format \"${typeof val}\" ${val}`)\n}\n\nmodule.exports = {\n  copyString,\n  startsWithZeroX,\n  removeLeadingZeroX,\n  prependZeroX,\n  hexToBuffer,\n  randomHexBuffer,\n  Buffer,\n  equalBuffers,\n  toBuffer,\n  isBuffer,\n  isHex,\n  toNumber\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/formats.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "randomHex",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~randomHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "name": "numberToBn",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~numberToBn",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "Buffer",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~Buffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~isEmpty",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 247,
    "kind": "variable",
    "name": "BN",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~BN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "values",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "name": "patterns",
    "memberof": "src/lib/formats.js",
    "static": true,
    "longname": "src/lib/formats.js~patterns",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "copyString",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~copyString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "startsWithZeroX",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~startsWithZeroX",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "True if string starts with '0x'",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "removeLeadingZeroX",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~removeLeadingZeroX",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "Removes '0x' from a string",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{string}checkAddressChecksum"
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "prependZeroX",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~prependZeroX",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "Put the 0x at the beginning of a string",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "hexToBuffer",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~hexToBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "Strips '0x' and turns it into a Buffer",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "buffer"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "randomHexBuffer",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~randomHexBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "Random Buffer of a size",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "isHex",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~isHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "True if a string is hex",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "equalBuffers",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~equalBuffers",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "True if two buffers have the same length and bytes",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "toBuffer",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~toBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": "Gracefully try to convert anything into a buffer",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "anything"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "encoding",
        "description": "hex, base64, utf8"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "isBuffer",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~isBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "toNumber",
    "memberof": "src/lib/formats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/formats.js~toNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/formats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "src/lib/patterns.js",
    "content": "let patterns = Object.freeze({\n  // starts with '0x'\n  zeroX: /^0x/i,\n  // starts with 0x or -0x\n  zeroXNegative: /^(-)?0x/i,\n  // positive or negative hex with optional 0x\n  hex: /^(-0x|0x)?[0-9a-f]{1,}$/i,\n  // positive or negative hex with 0x\n  hexStrict: /^(-)?0x[0-9a-f]{1,}$/i,\n  // aion-specific 0x0a\n  address: /^(0x)?a0[0-9a-f]{62}$/i,\n  // starts with utf8 null characters\n  utf8Null: /^(?:\\u0000)*/, // eslint-disable-line no-control-regex\n  // matches solidity array types int128[64] or uint128[32]\n  // captures array length\n  typeNArray: /^\\D{3,}\\d{1,}\\[(\\d+)\\]$/,\n  // match int128 or uint128\n  // captures byte size\n  typeN: /^\\D+(\\d+).*$/,\n  // if you have `unit128` just get `uint`\n  solidityTypeNoLength: /^([a-z]{3,})/,\n  // get [8] or []\n  solidityDimensions: /(\\[(\\d{1,})\\]|\\[\\])/g,\n  // get the 8 from [8]\n  solidityDimensionDigit: /\\d{1,}/,\n  // matches left-padded hex strings like 0000000FF\n  leadingHexZeroPadding: /^(?:00)*/,\n  // similar to typeNArray but just captures array length\n  arraySizeDigit: /(?:\\[)(\\d+)/,\n  // base64 encoding for buffers\n  // https://stackoverflow.com/questions/475074/regex-to-parse-or-validate-base64-data\n  base64: /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/\n})\n\nmodule.exports = patterns\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/patterns.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "patterns",
    "memberof": "src/lib/patterns.js",
    "static": true,
    "longname": "src/lib/patterns.js~patterns",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/patterns.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/lib/solidity.js",
    "content": "let {isEmpty} = require('underscore')\nlet get = require('lodash/get')\nlet patterns = require('./patterns')\nlet values = require('./values')\n\n/*\n\nsolidity type-specific information\n\n*/\nlet types = {\n  function: {\n    length: 4\n  },\n  bool: {\n    pad: 'left'\n  },\n  uint: {\n    pad: 'left'\n  },\n  int: {\n    pad: 'left'\n  },\n  fixed: {\n    pad: 'left'\n  },\n  ufixed: {\n    pad: 'left'\n  },\n  address: {\n    // acts as uint\n    pad: 'left'\n  },\n  bytes: {\n    pad: 'right',\n    dynamic: true\n  },\n  string: {\n    pad: 'right',\n    dynamic: true\n  }\n}\n\nfunction isSolidityArrayType(val) {\n  return (\n    val.indexOf(values.solidity.dimensionStartChar) > -1 &&\n    val.indexOf(values.solidity.dimensionEndChar) > -1\n  )\n}\n\nfunction isSolidityDynamicType(val) {\n  let dyn = get(types, `${val}.dynamic`)\n  return dyn === true || val.indexOf(values.solidity.dimensionsDynamic) > -1\n}\n\n/**\n * Parse the solidity type and give relevant information such is dimensions\n * @param {string} val\n * @return {object}\n */\nfunction parseType(val) {\n  let op = {}\n  let baseType = patterns.solidityTypeNoLength.exec(val)\n  let byteLength = patterns.typeN.exec(val)\n  let dimensions = val.match(patterns.solidityDimensions)\n\n  if (isEmpty(baseType) === false) {\n    op.baseType = baseType[1]\n  }\n\n  if (isEmpty(byteLength) === false) {\n    op.byteLength = parseInt(byteLength[1], 10)\n  }\n\n  op.array = isSolidityArrayType(val)\n  op.dynamic = isSolidityDynamicType(val) || isSolidityDynamicType(baseType)\n\n  if (isEmpty(dimensions) === false) {\n    op.dimensions = dimensions.map((item, index) => {\n      let op = {index}\n      let digit = item.match(patterns.solidityDimensionDigit)\n      if (isEmpty(digit) === false) {\n        op.length = parseInt(digit[0], 10)\n      }\n      return op\n    })\n  }\n\n  return op\n}\n\nmodule.exports = {\n  types,\n  parseType\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/solidity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/lib/solidity.js",
    "static": true,
    "longname": "src/lib/solidity.js~isEmpty",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "get",
    "memberof": "src/lib/solidity.js",
    "static": true,
    "longname": "src/lib/solidity.js~get",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "patterns",
    "memberof": "src/lib/solidity.js",
    "static": true,
    "longname": "src/lib/solidity.js~patterns",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "values",
    "memberof": "src/lib/solidity.js",
    "static": true,
    "longname": "src/lib/solidity.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "types",
    "memberof": "src/lib/solidity.js",
    "static": true,
    "longname": "src/lib/solidity.js~types",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"function\": *, \"bool\": *, \"uint\": *, \"int\": *, \"fixed\": *, \"ufixed\": *, \"address\": *, \"bytes\": *, \"string\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "isSolidityArrayType",
    "memberof": "src/lib/solidity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/solidity.js~isSolidityArrayType",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "isSolidityDynamicType",
    "memberof": "src/lib/solidity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/solidity.js~isSolidityDynamicType",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "parseType",
    "memberof": "src/lib/solidity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/solidity.js~parseType",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/solidity.js",
    "importStyle": null,
    "description": "Parse the solidity type and give relevant information such is dimensions",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "src/lib/transactions.js",
    "content": "let {createValidator} = require('./validators')\n\nlet transactionSchema = {\n  type: 'object',\n  required: [\n    'to',\n    'from',\n    'data',\n    'value',\n    'gas',\n    'gasLimit',\n    'gasPrice',\n    'nonce',\n    'chainId'\n  ],\n  properties: {\n    to: {type: 'string'},\n    from: {type: 'string'},\n    data: {type: 'string'},\n    value: {type: 'string'},\n    gas: {type: 'string'},\n    gasLimit: {type: 'string'},\n    gasPrice: {type: 'string'},\n    nonce: {type: 'string'},\n    chainId: {type: 'string'}\n  }\n}\n\nlet validateTransaction = createValidator(transactionSchema)\n\nmodule.exports = {validateTransaction}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/transactions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "createValidator",
    "memberof": "src/lib/transactions.js",
    "static": true,
    "longname": "src/lib/transactions.js~createValidator",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/transactions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "variable",
    "name": "transactionSchema",
    "memberof": "src/lib/transactions.js",
    "static": true,
    "longname": "src/lib/transactions.js~transactionSchema",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/transactions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "validateTransaction",
    "memberof": "src/lib/transactions.js",
    "static": true,
    "longname": "src/lib/transactions.js~validateTransaction",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/transactions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "src/lib/validators.js",
    "content": "let {isArray} = require('underscore')\nlet Ajv = require('ajv')\nlet ajv = new Ajv()\n\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'))\n\nlet createValidator = schema => {\n  let validator = ajv.compile(schema)\n  return val => {\n    let valid = validator(val)\n    let errors = validator.errors\n    let error = errors\n    if (isArray(errors) === true) {\n      error = errors[0]\n    }\n    return [valid, error]\n  }\n}\n\nmodule.exports = {\n  createValidator\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/validators.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "isArray",
    "memberof": "src/lib/validators.js",
    "static": true,
    "longname": "src/lib/validators.js~isArray",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "Ajv",
    "memberof": "src/lib/validators.js",
    "static": true,
    "longname": "src/lib/validators.js~Ajv",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "ajv",
    "memberof": "src/lib/validators.js",
    "static": true,
    "longname": "src/lib/validators.js~ajv",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "createValidator",
    "memberof": "src/lib/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/validators.js~createValidator",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "schema",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/lib/values.js",
    "content": "/*\n\nThese are used as defaults usually if the API consumer does not provide their\nown. For security purposes someone should at some point inspect the default\nvalues.\n\n*/\n\nlet {Buffer} = require('safe-buffer')\n\nlet values = Object.freeze({\n  sha3: {\n    nulls: ['', '0x', []],\n    nullHex:\n      '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n  },\n  //\n  // used in many places to add or remove this value\n  //\n  zeroX: '0x',\n  //\n  // eth-lib/nat\n  // whatever that is it uses these values extensively\n  //\n  nat: {\n    zero: '0x0',\n    one: '0x1'\n  },\n  //\n  // utils.toHex\n  // randomHex\n  //\n  hex: {\n    zero: '0x00',\n    one: '0x01',\n    // used for creating accounts\n    // 32 bytes was used for the eth module\n    // SECURITY: is this secure enough?\n    randomHexSize: 32\n  },\n  //\n  // aion solidity\n  //\n  maxIntSize: 128,\n  rpc: {\n    url: 'http://127.0.0.1:8545'\n  },\n  addresses: {\n    // addresses start with 0xAO identifier\n    identifier: new Buffer('a0', 'hex'),\n    // without 0x\n    nonNumericLength: 64,\n    // with 0x\n    numericLength: 66\n  },\n  //\n  // crypto defaults\n  // mostly taken from ethereum web3\n  // SECURITY: should have a look some time\n  //\n  crypto: {\n    saltLength: 32,\n    ivLength: 16,\n    kdf: 'script',\n    dklen: 32,\n    pbkdf2: {\n      c: 262144,\n      prf: 'hmac-sha256',\n      digest: 'sha256'\n    },\n    scrypt: {\n      n: 8192,\n      r: 8,\n      p: 2\n    },\n    cipherIvAlgorithm: 'aes-128-ctr',\n    uuidRandomBytes: 16\n  },\n  //\n  // solidity types\n  //\n  solidity: {\n    //\n    // utils.solidityPack\n    //\n    pack: {\n      zero: '00',\n      one: '01'\n    },\n    typeStringLength: 32,\n    typeByteLength: 16,\n    addressByteLength: 32,\n    boolean: {\n      zero: '0x00000000000000000000000000000000',\n      one: '0x00000000000000000000000000000001'\n    },\n    dimensionStartChar: '[',\n    dimensionEndChar: ']',\n    dimensionsDynamic: '[]'\n  }\n})\n\nmodule.exports = values\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/lib/values.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "name": "Buffer",
    "memberof": "src/lib/values.js",
    "static": true,
    "longname": "src/lib/values.js~Buffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/values.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "name": "values",
    "memberof": "src/lib/values.js",
    "static": true,
    "longname": "src/lib/values.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/lib/values.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "file",
    "name": "src/net.js",
    "content": "let {hexToNumber} = require('./utils')\nlet {assignProvider} = require('./providers')\nlet {assignExtend} = require('./extend')\n\nlet methods = [\n  {\n    name: 'getId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: hexToNumber\n  },\n  {\n    name: 'isListening',\n    call: 'net_listening',\n    params: 0\n  },\n  {\n    name: 'getPeerCount',\n    call: 'net_peerCount',\n    params: 0,\n    outputFormatter: hexToNumber\n  }\n]\n\nfunction Net(provider, providerOpts) {\n  assignProvider(this, {provider, providerOpts})\n  assignExtend(this, {methods})\n}\n\nmodule.exports = Net\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/net.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "variable",
    "name": "hexToNumber",
    "memberof": "src/net.js",
    "static": true,
    "longname": "src/net.js~hexToNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/net.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "assignProvider",
    "memberof": "src/net.js",
    "static": true,
    "longname": "src/net.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/net.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/net.js",
    "static": true,
    "longname": "src/net.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/net.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/net.js",
    "static": true,
    "longname": "src/net.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/net.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "Net",
    "memberof": "src/net.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net.js~Net",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/net.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "providerOpts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "src/personal.js",
    "content": "let {assignExtend} = require('./extend.js')\nlet {assignProvider} = require('./providers.js')\nlet utils = require('./utils')\nlet formatters = require('./formatters')\nlet BatchRequest = require('./batch-request')\n\nlet methods = [\n  {\n    name: 'getAccounts',\n    call: 'personal_listAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  },\n  {\n    name: 'newAccount',\n    call: 'personal_newAccount',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: utils.toChecksumAddress\n  },\n  {\n    name: 'unlockAccount',\n    call: 'personal_unlockAccount',\n    params: 3,\n    inputFormatter: [formatters.inputAddressFormatter, null, null]\n  },\n  {\n    name: 'lockAccount',\n    call: 'personal_lockAccount',\n    params: 1,\n    inputFormatter: [formatters.inputAddressFormatter]\n  },\n  {\n    name: 'importRawKey',\n    call: 'personal_importRawKey',\n    params: 2\n  },\n  {\n    name: 'sendTransaction',\n    call: 'personal_sendTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  },\n  {\n    name: 'signTransaction',\n    call: 'personal_signTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  },\n  {\n    name: 'sign',\n    call: 'personal_sign',\n    params: 3,\n    inputFormatter: [\n      formatters.inputSignFormatter,\n      formatters.inputAddressFormatter,\n      null\n    ]\n  },\n  {\n    name: 'ecRecover',\n    call: 'personal_ecRecover',\n    params: 2,\n    inputFormatter: [formatters.inputSignFormatter, null]\n  }\n]\n\nfunction Personal(provider, providerOpts) {\n  assignProvider(this, {provider, providerOpts})\n  assignExtend(this, {methods})\n}\n\nPersonal.prototype.BatchRequest = BatchRequest\n\nmodule.exports = Personal\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/personal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "assignExtend",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~assignExtend",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "assignProvider",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "utils",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~utils",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "formatters",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~formatters",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "BatchRequest",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~BatchRequest",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "methods",
    "memberof": "src/personal.js",
    "static": true,
    "longname": "src/personal.js~methods",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "Personal",
    "memberof": "src/personal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/personal.js~Personal",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/personal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "providerOpts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "src/providers.js",
    "content": "let HttpProvider = require('./http-provider')\nlet IpcProvider = require('./ipc-provider')\nlet WebsocketProvider = require('./websocket-provider')\nlet {isEmpty} = require('underscore')\nlet values = require('./lib/values')\n\nfunction assignProvider(\n  context,\n  {provider = values.rpc.url, providerOpts = {}}\n) {\n  context.givenProvider = null\n  context.currentProvider = null\n\n  context.providers = {\n    HttpProvider,\n    WebsocketProvider,\n    IpcProvider\n  }\n\n  // recursive set provider\n  context.setProvider = function(provider, providerOpts) {\n    let prov = provider\n\n    if (isEmpty(prov) === true) {\n      throw new Error('no provider or url was given')\n    }\n\n    // user passed a string url and options\n    if (typeof provider === 'string') {\n      if (\n        provider.startsWith('http://') === true ||\n        provider.startsWith('https://') === true ||\n        provider.startsWith('//') === true\n      ) {\n        prov = new HttpProvider(provider, providerOpts)\n      }\n\n      if (\n        provider.startsWith('ws://') === true ||\n        provider.startsWith('wss://') === true\n      ) {\n        prov = new WebsocketProvider(provider, providerOpts)\n      }\n\n      if (provider.startsWith('/') === true) {\n        prov = new IpcProvider(provider, providerOpts)\n      }\n    }\n\n    context.currentProvider = prov\n  }\n\n  if (provider !== undefined) {\n    context.setProvider(provider, providerOpts)\n  }\n}\n\nmodule.exports = {assignProvider}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/providers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "variable",
    "name": "HttpProvider",
    "memberof": "src/providers.js",
    "static": true,
    "longname": "src/providers.js~HttpProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "IpcProvider",
    "memberof": "src/providers.js",
    "static": true,
    "longname": "src/providers.js~IpcProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "variable",
    "name": "WebsocketProvider",
    "memberof": "src/providers.js",
    "static": true,
    "longname": "src/providers.js~WebsocketProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/providers.js",
    "static": true,
    "longname": "src/providers.js~isEmpty",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "values",
    "memberof": "src/providers.js",
    "static": true,
    "longname": "src/providers.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "assignProvider",
    "memberof": "src/providers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/providers.js~assignProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"provider\": *, \"providerOpts\": *}"
        ],
        "defaultRaw": {
          "provider": null,
          "providerOpts": null
        },
        "defaultValue": "{\"provider\":null,\"providerOpts\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "src/shh.js",
    "content": "function Shh() {\n  throw new Error(`shh isn't implemented on aion`)\n}\n\nmodule.exports = Shh\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/shh.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "function",
    "name": "Shh",
    "memberof": "src/shh.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shh.js~Shh",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/shh.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/**\n * @module utils\n */\n\nlet {Buffer} = require('safe-buffer')\nlet BN = require('bn.js')\n\nlet numberToBn = require('number-to-bn')\nlet randomhex = require('randomhex')\nlet utf8 = require('utf8')\n\nlet _ = require('underscore')\n\nlet {\n  isEmpty,\n  isObject,\n  isString,\n  isNumber,\n  isEqual,\n  isArray,\n  isBoolean,\n  each\n} = _\n\nlet get = require('lodash/get')\nlet accounts = require('./lib/accounts')\nlet values = require('./lib/values')\nlet patterns = require('./lib/patterns')\nlet crypto = require('./lib/crypto')\nlet {\n  removeLeadingZeroX,\n  prependZeroX,\n  startsWithZeroX,\n  copyString\n} = require('./lib/formats')\n\n/**\n * Generate random hex values of a certain length\n * @param {number} size how many bytes\n * @return {string} randomly generated hex value starting with '0x'\n */\nlet randomHex = size => randomhex(size)\n\n/**\n *\n * @member _\n * @type {function}\n */\n// utils._ = _\n\n/**\n * Constructor for bn.js\n *\n * It would be the same as `require('bn.js')`\n *\n * @constructor BN\n * @member BN\n */\n// utils.BN = BN\n\n/**\n * Convert number to BN\n */\nlet toBN = val => numberToBn(val)\n\n/**\n * Get the constructor of whatever is passed in\n * @access private\n * @param {object} obj\n * @returns {string} constructor name\n */\nlet getConstructor = val => get(val, 'constructor.name')\n\n/**\n * BN.isBN\n * @param {object} val\n * @returns {boolean}\n */\nlet isBN = val => BN.isBN(val)\n\n/**\n * Is it a `BigNumber` or not?\n * @param {object} obj\n * @return {boolean}\n */\nlet isBigNumber = obj => getConstructor(obj) === 'BigNumber'\n\n/**\n * Checks if a value is a hex value\n *\n * 0x number expressions return false but '0x' string expressions true\n *\n * @param {string} val\n * @return {boolean}\n */\nlet isHex = val =>\n  (isString(val) === true || isNumber(val) === true) &&\n  patterns.hex.test(val) === true\n\n/**\n * Checks if a value is hex starting with '0x'\n * @param {string} val\n * @return {boolean}\n */\nlet isHexStrict = val =>\n  (isString(val) === true || isNumber(val) === true) &&\n  patterns.hexStrict.test(val) === true\n\n/**\n * Reduce function for hexToBytes. It splits by each two characters.\n * e.g. ['ff', 'aa', 'f5', '55']\n * @private\n * @return {array} array of hex bytes\n */\nfunction hexToBytesReduction(acm, item, index, arr) {\n  if (index % 2 === 0 && index <= arr.length - 2) {\n    acm.push(item + arr[index + 1])\n  }\n\n  return acm\n}\n\n/**\n * Convert a hex string to a byte array\n *\n * @param {string|number|BN} hex\n * @return {array} the byte array\n */\nfunction hexToBytes(val) {\n  if (\n    typeof val === 'string' &&\n    val.length % 2 !== 0 &&\n    isHexStrict(val) === false\n  ) {\n    throw new Error('utils.hexToBytes requires a valid hex string')\n  }\n\n  let op\n\n  if (typeof val === 'number') {\n    op = toBN(val).toString('hex')\n  }\n\n  if (isBN(val) === true || isBigNumber(val) === true) {\n    op = val.toString('hex')\n  }\n\n  if (typeof val === 'string') {\n    op = copyString(val)\n  }\n\n  return removeLeadingZeroX(op)\n    .split('')\n    .reduce(hexToBytesReduction, [])\n    .map(item => parseInt(item, 16))\n}\n\nfunction createPadder(direction) {\n  return function createPadderInternal(val, length = 1, sign = '0') {\n    let padding = ''\n    let isHex =\n      typeof val === 'number' ||\n      startsWithZeroX(val) === true ||\n      isBN(val) === true ||\n      isBigNumber(val) === true\n    let offset = isHex === true ? 2 : 0\n    let valLen =\n      isHex === true ? toBN(val).toString('hex').length + 2 : val.length\n    let iterations = length - valLen + offset\n    for (let i = 0; i < iterations; i += 1) {\n      padding += sign\n    }\n\n    let op = ''\n\n    if (isHex === true) {\n      op = removeLeadingZeroX(toBN(val).toString('hex'))\n    }\n\n    if (isHex === false && typeof val === 'string') {\n      op = copyString(val)\n    }\n\n    if (direction === 'left') {\n      op = `${padding}${op}`\n    }\n\n    if (direction === 'right') {\n      op = `${op}${padding}`\n    }\n\n    if (isHex === true) {\n      op = prependZeroX(op)\n    }\n\n    return op\n  }\n}\n\n/**\n * Put padding to the left. The default padding sign is '0'\n * @param {string|number|BN|BigNumber} val\n * @param {number} length how many of the pad sign\n * @param {string} sign\n */\nlet padLeft = createPadder('left')\n\n/**\n * Alias to padLeft\n */\nlet leftPad = padLeft\n\n/**\n * Put padding to the right. The default padding sign is '0'\n * @param {string|number|BN|BigNumber} val\n * @param {number} quantity how many of the pad sign\n * @param {string} sign\n */\nlet padRight = createPadder('right')\n\n/**\n * Alias to padRight\n */\nlet rightPad = padRight\n\n/**\n * Convert array of bytes into hex string with 0x prepended\n * @param {array} val bytes\n * @return {string}\n */\nlet bytesToHex = val =>\n  prependZeroX(\n    val\n      .map(item => {\n        let op = item.toString(16)\n        if (op.length === 1) {\n          // zero pad\n          op = `0${op}`\n        }\n        return op\n      })\n      .join('')\n  )\n\n/**\n * Compute SHA3 256 length hash a.k.a. keccak256\n *\n * Prepends '0x' string to the result\n *\n * @param {string|array} val\n * @return {string} keccak256 hash\n */\nfunction sha3(val) {\n  // our keccak256 implementation or ethereum web3 don't accept these values\n  if (\n    isEmpty(val) === true ||\n    // not having slice meaning it's not an array-like thing\n    (typeof val !== 'string' &&\n      get(val, 'slice') === undefined &&\n      isBN(val) === false)\n  ) {\n    throw new Error(`utils.sha3 invalid value: \"${val}\"`)\n  }\n\n  let isSha3Null = false\n\n  // there's a list of things ethereum web3 returns null for so we do too\n  each(values.sha3.nulls, item => {\n    if (isEqual(item, val) === true) {\n      isSha3Null = true\n    }\n  })\n\n  // ethereum web3 returns null\n  if (isSha3Null === true) {\n    return null\n  }\n\n  let op\n\n  if (typeof val === 'string') {\n    // copy the string\n    op = copyString(val)\n\n    if (startsWithZeroX(op) === true) {\n      // the user passed in a string like '0xdccd2e7f400ab38e'\n      op = hexToBytes(op)\n    }\n  }\n\n  if (isBN(val) === true) {\n    op = val.toString()\n  }\n\n  op = crypto.keccak256(op).toString('hex')\n\n  if (op === values.sha3.nullHex) {\n    return null\n  }\n\n  return `0x${op}`\n}\n\n/**\n * Alias to utils.sha3\n * @param {string|array} val\n * @return {string} keccak256 hash\n */\n// utils.keccak256 = sha3\n\n/**\n * True if valid aion account address\n * @param {string} val\n * @return {boolean}\n */\nlet isAddress = val => accounts.isAccountAddress(val)\n\n/**\n * Returns true if the address checksum calculates correctly\n * @param {string} val\n * @return {boolean} [description]\n */\nfunction checkAddressChecksum(val) {\n  if (accounts.isAccountAddress(val) === false) {\n    throw new Error(`not a valid aion address: ${val}`)\n  }\n\n  return accounts.isValidChecksumAddress(val)\n}\n\nfunction utf8ToHex(val) {\n  let op = utf8.encode(val)\n  let hex = ''\n  let code\n  let codeString\n\n  op = op.replace(patterns.utf8Null, '')\n  op = op\n    .split('')\n    .reverse()\n    .join('')\n  op = op.replace(patterns.utf8Null, '')\n  op = op\n    .split('')\n    .reverse()\n    .join('')\n\n  for (let i = 0; i < op.length; i++) {\n    code = op.charCodeAt(i)\n    codeString = code.toString(16)\n    hex += codeString.length < 2 ? '0' + codeString : codeString\n  }\n\n  return '0x' + hex\n}\n\nfunction numberToHex(val) {\n  if (val === undefined || val === null) {\n    // should this warn? if the user thinks its a number but its not\n    // it could cause other problems\n    // console.warn('numberToHex, undefined or null', val)\n    return val\n  }\n\n  if (isFinite(val) === false && isHexStrict(val) === false) {\n    throw new Error('numberToHex expecting number and got something else')\n  }\n\n  let number = numberToBn(val)\n  let result = number.toString(16)\n  return number.lt(new BN(0)) ? '-0x' + result.substring(1) : '0x' + result\n}\n\n/**\n * It's used internally to convert addresses, booleans, objects, strings,\n * and numbers into hex for solidity sha3.\n * @param {object} val\n * @param {string} [returnType]\n * @return {string}\n */\nfunction toHex(val, returnType) {\n  let {maxIntSize, hex, zeroX} = values\n  let {zero, one} = hex\n\n  if (isAddress(val) === true) {\n    return returnType\n      ? 'address'\n      : zeroX + removeLeadingZeroX(val.toLowerCase())\n  }\n\n  if (isBoolean(val) === true) {\n    return returnType ? 'bool' : val ? one : zero\n  }\n\n  if (\n    isObject(val) === true &&\n    isBigNumber(val) === false &&\n    isBN(val) === false\n  ) {\n    return returnType ? 'string' : utf8ToHex(JSON.stringify(val))\n  }\n\n  // if its a negative number, pass it through numberToHex\n  if (isString(val) === true) {\n    if (patterns.zeroXNegative.test(val) === true) {\n      return returnType ? `int${maxIntSize}` : numberToHex(val)\n    }\n\n    if (startsWithZeroX(val) === true) {\n      return returnType ? 'bytes' : val\n    }\n\n    if (isFinite(val) === false) {\n      return returnType ? 'string' : utf8ToHex(val)\n    }\n  }\n\n  if (isEmpty(returnType) === false) {\n    if (val < 0) {\n      return `int${maxIntSize}`\n    }\n\n    return `uint${maxIntSize}`\n  }\n\n  return numberToHex(val)\n}\n\nfunction elementaryName(name) {\n  if (name.startsWith('int[') === true) {\n    // for example appends '[45]'\n    return 'int128' + name.slice(3)\n  }\n  if (name === 'int') {\n    return 'int128'\n  }\n  if (name.startsWith('uint[') === true) {\n    return 'uint128' + name.slice(4)\n  }\n  if (name === 'uint') {\n    return 'uint128'\n  }\n  if (name.startsWith('fixed[') === true) {\n    return 'fixed128x128' + name.slice(5)\n  }\n  if (name === 'fixed') {\n    return 'fixed128x128'\n  }\n  if (name.startsWith('ufixed[') === true) {\n    return 'ufixed128x128' + name.slice(6)\n  }\n  if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nfunction parseNumber(val) {\n  let type = typeof val\n  if (type === 'string') {\n    if (isHexStrict(val) === true) {\n      return new BN(removeLeadingZeroX(val), 16)\n    }\n    return new BN(val, 10)\n  }\n  if (type === 'number') {\n    return new BN(val)\n  }\n  if (isBigNumber(val) === true) {\n    return new BN(val.toString(10))\n  }\n  if (isBN(val) === true) {\n    return val\n  }\n  throw new Error(`unable to parse type \"${type}\"`)\n}\n\n// Parse N from type<N>\nfunction parseTypeN(type) {\n  let typesize = patterns.typeN.exec(type)\n  return typesize ? parseInt(typesize[1], 10) : null\n}\n\nfunction parseTypeNArray(type) {\n  let arraySize = patterns.typeNArray.exec(type)\n  return arraySize ? parseInt(arraySize[1], 10) : null\n}\n\nfunction solidityPack(type, value, arraySize) {\n  let size\n  let num\n  let {maxIntSize} = values\n  let {zero, one} = values.solidity.pack\n  let padAmount\n  type = elementaryName(type)\n\n  if (type === 'bytes') {\n    if (removeLeadingZeroX(value).length % 2 !== 0) {\n      throw new Error('Invalid bytes characters ' + value.length)\n    }\n\n    return value\n  }\n\n  if (type === 'string') {\n    return utf8ToHex(value)\n  }\n\n  if (type === 'bool') {\n    return value ? one : zero\n  }\n\n  if (type.startsWith('address') === true) {\n    size = values.addressLength\n\n    if (isAddress(value) === false) {\n      throw new Error(`\"${value}\" is not a valid address`)\n    }\n\n    return leftPad(value.toLowerCase(), size)\n  }\n\n  size = parseTypeN(type)\n\n  if (type.startsWith('bytes') === true) {\n    if (size === undefined) {\n      throw new Error('bytes[] not yet supported in solidity')\n    }\n\n    // must be 32 byte slices when in an array\n    if (isNumber(arraySize) === true) {\n      size = 32\n    }\n\n    if (size < 1 || size > 32 || size < removeLeadingZeroX(value).length / 2) {\n      throw new Error(`Invalid bytes${size} for ${value}`)\n    }\n\n    return rightPad(value, size * 2)\n  }\n\n  if (type.startsWith('uint') === true) {\n    if (size % 8 || size < 8 || size > maxIntSize) {\n      throw new Error(`invalid uint size: ${size}, max size: ${maxIntSize}`)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error(\n        'Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength()\n      )\n    }\n\n    if (num.lt(new BN(0)) === true) {\n      throw new Error('Supplied uint ' + num.toString() + ' is negative')\n    }\n\n    // TODO: figure out these values\n    padAmount = size / 8\n    padAmount = padAmount * 2\n    return size ? leftPad(num.toString('hex'), padAmount) : num\n  }\n\n  if (type.startsWith('int') === true) {\n    if (size % 8 || size < 8 || size > maxIntSize) {\n      throw new Error('Invalid int' + size + ' size')\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error(\n        'Supplied int exceeds width: ' + size + ' vs ' + num.bitLength()\n      )\n    }\n\n    if (num.lt(new BN(0)) === true) {\n      return num.toTwos(size).toString('hex')\n    }\n\n    // TODO: figure out these values\n    padAmount = size / 8\n    padAmount = padAmount * 2\n    return size ? leftPad(num.toString('hex'), padAmount) : num\n  }\n\n  // FIXME: support all other types\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\nfunction soliditySortArg(item) {\n  let type\n  let value\n  let arraySize\n  let hexArg\n\n  if (isArray(item) === true) {\n    throw new Error(\n      `soliditySha3 doesn't accept Array type because ethereum web3 doesn't`\n    )\n  }\n\n  // { t: '', v: ''}\n  // { type: '', value: ''}\n  if (\n    typeof item === 'object' &&\n    (item.t !== undefined || item.type !== undefined) &&\n    (item.v !== undefined || item.value !== undefined)\n  ) {\n    type = item.type || item.t\n    value = item.value || item.v\n  } else {\n    type = toHex(item, true)\n    value = toHex(item)\n\n    if (type.startsWith('int') === false && type.startsWith('uint') === false) {\n      type = 'bytes'\n    }\n  }\n\n  if (\n    (type.startsWith('int') === true || type.startsWith('uint') === true) &&\n    typeof value === 'string' &&\n    patterns.zeroXNegative.test(value) === false\n  ) {\n    value = new BN(value)\n  }\n\n  // get the array size\n  if (isArray(value) === true) {\n    arraySize = parseTypeNArray(type)\n    if (isNumber(arraySize) === true && value.length !== arraySize) {\n      let arr = JSON.stringify(value)\n      throw new Error(`${type} is not matching the given array ${arr}`)\n    } else {\n      arraySize = value.length\n    }\n  }\n\n  if (isArray(value) === true) {\n    hexArg = value.map(item => {\n      return removeLeadingZeroX(\n        solidityPack(type, item, arraySize).toString('hex')\n      )\n    })\n    return hexArg.join('')\n  } else {\n    hexArg = solidityPack(type, value, arraySize)\n    return removeLeadingZeroX(hexArg.toString('hex'))\n  }\n}\n\n/**\n * Converts all the arguments into some other format then hashes it with sha3.\n * @param args captures all arguments\n * @return {string} [description]\n */\nfunction soliditySha3() {\n  return sha3(\n    prependZeroX(\n      Array.from(arguments)\n        .map(soliditySortArg)\n        .join('')\n    )\n  )\n}\n\n/**\n * Convert an Aion address to an Aion Checksum address.\n *\n * Rather than being all lower or uppercase letters are upper or lower based\n * on some critera.\n *\n * @param {string} val\n * @return {string}\n */\nlet toChecksumAddress = val => {\n  if (accounts.isAccountAddress(val) === false) {\n    // this differs from how ethereum web3 does it\n    // ethereum web3 returns a blank string\n    // we throw if it's invalid\n    throw new Error(`Given address \"${val}\" is not a valid Aion address.`)\n  }\n\n  return accounts.createChecksumAddress(val)\n}\n\n/**\n * Convert hex string to number string\n * @param {string} val\n * @return {string}\n */\nlet hexToNumberString = val => toBN(val).toString(10)\n\n/**\n * Convert hex string to javascript number\n * @param {string} val\n * @return {number}\n */\nlet hexToNumber = val => toBN(val).toNumber()\n\n/**\n * Convert hex string to utf8 string\n * @param {string} val\n * @return {string}\n */\nfunction hexToUtf8(val) {\n  // it removes 000000 padding\n  let op = removeLeadingZeroX(val)\n    .replace(patterns.leadingHexZeroPadding, '')\n    .split('')\n    .reverse()\n    .join('')\n    .replace(patterns.leadingHexZeroPadding, '')\n    .split('')\n    .reverse()\n    .join('')\n\n  op = prependZeroX(op)\n  op = hexToBytes(op)\n    .map(item => String.fromCharCode(item))\n    .join('')\n\n  return utf8.decode(op)\n}\n\nfunction hexToAscii(val) {\n  return hexToBytes(val)\n    .map(item => String.fromCharCode(item))\n    .join('')\n}\n\nfunction asciiToHex(val) {\n  if (isEmpty(val) === true) {\n    return copyString(values.hex.zero)\n  }\n\n  return prependZeroX(\n    val\n      .split('')\n      .map(item => item.charCodeAt(0).toString(16))\n      .join('')\n  )\n}\n\nlet toTwosComplement = val =>\n  prependZeroX(\n    toBN(val)\n      .toTwos(256)\n      .toString(16, 64)\n  )\n\nfunction blake2b256(val) {\n  if (\n    val === undefined ||\n    val === null ||\n    // not having slice meaning it's not an array-like thing\n    (typeof val !== 'string' &&\n      get(val, 'slice') === undefined &&\n      isBN(val) === false)\n  ) {\n    throw new Error(`blake2b256 invalid value: \"${val}\"`)\n  }\n\n  let op\n\n  if (typeof val === 'string') {\n    // copy the string\n    op = copyString(val)\n\n    if (startsWithZeroX(op) === true) {\n      // the user passed in a string like '0xdccd2e7f400ab38e'\n      op = hexToBytes(op)\n    } else {\n      op = Buffer.from(op)\n    }\n  }\n\n  if (isBN(val) === true) {\n    op = Buffer.from(val.toString())\n  }\n\n  op = crypto.blake2b256(op)\n  op = op.toString('hex')\n\n  return `0x${op}`\n}\n\nmodule.exports = {\n  // ethereum web3 implementations\n  randomHex,\n  _,\n  BN,\n  toBN,\n  isBN,\n  isBigNumber,\n  isHex,\n  isHexStrict,\n  hexToBytes,\n  bytesToHex,\n  toHex,\n  checkAddressChecksum,\n  toChecksumAddress,\n  utf8ToHex,\n  isAddress,\n  hexToNumberString,\n  hexToNumber,\n  numberToHex,\n  hexToUtf8,\n  hexToAscii,\n  asciiToHex,\n  padLeft,\n  leftPad,\n  padRight,\n  rightPad,\n  toTwosComplement,\n  sha3,\n  keccak256: sha3,\n  soliditySha3,\n  blake2b256\n}\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "variable",
    "name": "Buffer",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~Buffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "utils"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "BN",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~BN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "numberToBn",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~numberToBn",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "variable",
    "name": "randomhex",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~randomhex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "variable",
    "name": "utf8",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~utf8",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "_",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~_",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~isEmpty",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "get",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~get",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "accounts",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~accounts",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "values",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~values",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "patterns",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~patterns",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 319,
    "kind": "variable",
    "name": "crypto",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 320,
    "kind": "variable",
    "name": "removeLeadingZeroX",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~removeLeadingZeroX",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "randomHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~randomHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Generate random hex values of a certain length",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "how many bytes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "randomly generated hex value starting with '0x'"
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "toBN",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~toBN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert number to BN",
    "lineNumber": 64,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "getConstructor",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getConstructor",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Get the constructor of whatever is passed in",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} constructor name"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "constructor name"
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "isBN",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isBN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "BN.isBN",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "isBigNumber",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isBigNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Is it a `BigNumber` or not?",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "isHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Checks if a value is a hex value\n\n0x number expressions return false but '0x' string expressions true",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "isHexStrict",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isHexStrict",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Checks if a value is hex starting with '0x'",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "hexToBytesReduction",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToBytesReduction",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Reduce function for hexToBytes. It splits by each two characters.\ne.g. ['ff', 'aa', 'f5', '55']",
    "lineNumber": 115,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of hex bytes"
    },
    "params": [
      {
        "name": "acm",
        "types": [
          "*"
        ]
      },
      {
        "name": "item",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "types": [
          "*"
        ]
      },
      {
        "name": "arr",
        "types": [
          "*"
        ]
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "hexToBytes",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToBytes",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert a hex string to a byte array",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "BN"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "the byte array"
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "createPadder",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~createPadder",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [
      {
        "name": "direction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "padLeft",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~padLeft",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Put padding to the left. The default padding sign is '0'",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "BN",
          "BigNumber"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "how many of the pad sign"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sign",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "leftPad",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~leftPad",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Alias to padLeft",
    "lineNumber": 211,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "padRight",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~padRight",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Put padding to the right. The default padding sign is '0'",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "BN",
          "BigNumber"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "quantity",
        "description": "how many of the pad sign"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sign",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "name": "rightPad",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~rightPad",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Alias to padRight",
    "lineNumber": 224,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "bytesToHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~bytesToHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert array of bytes into hex string with 0x prepended",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "bytes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "sha3",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~sha3",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Compute SHA3 256 length hash a.k.a. keccak256\n\nPrepends '0x' string to the result",
    "lineNumber": 253,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "keccak256 hash"
    },
    "ignore": true
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "isAddress",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~isAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "True if valid aion account address",
    "lineNumber": 316,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "checkAddressChecksum",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~checkAddressChecksum",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Returns true if the address checksum calculates correctly",
    "lineNumber": 323,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "utf8ToHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~utf8ToHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 331,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "numberToHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~numberToHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "toHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~toHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "It's used internally to convert addresses, booleans, objects, strings,\nand numbers into hex for solidity sha3.",
    "lineNumber": 381,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "returnType",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "elementaryName",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~elementaryName",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 429,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "parseNumber",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 458,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "parseTypeN",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseTypeN",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 479,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "parseTypeNArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~parseTypeNArray",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 484,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "solidityPack",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~solidityPack",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 489,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arraySize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "soliditySortArg",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~soliditySortArg",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 590,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "soliditySha3",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~soliditySha3",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Converts all the arguments into some other format then hashes it with sha3.",
    "lineNumber": 657,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "captures all arguments"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "toChecksumAddress",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~toChecksumAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert an Aion address to an Aion Checksum address.\n\nRather than being all lower or uppercase letters are upper or lower based\non some critera.",
    "lineNumber": 676,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "hexToNumberString",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToNumberString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert hex string to number string",
    "lineNumber": 692,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "hexToNumber",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToNumber",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert hex string to javascript number",
    "lineNumber": 699,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "function",
    "name": "hexToUtf8",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToUtf8",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": "Convert hex string to utf8 string",
    "lineNumber": 706,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "hexToAscii",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~hexToAscii",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 726,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "asciiToHex",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~asciiToHex",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 732,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "toTwosComplement",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~toTwosComplement",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 745,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "blake2b256",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~blake2b256",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 752,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "file",
    "name": "src/wallet.js",
    "content": "let {isString, isEmpty, each} = require('underscore')\nlet {isBuffer, toBuffer} = require('./lib/formats')\nlet {isAccountAddress} = require('./lib/accounts')\n\nlet nonAccountKeys = ['_accounts', 'length', 'defaultKeyName']\n\nfunction Wallet(accounts) {\n  this._accounts = accounts\n  this.length = 0\n  this.defaultKeyName = 'web3js_wallet'\n}\n\nWallet.prototype._recalculateLength = function() {\n  this.length = Object.keys(this).length - nonAccountKeys.length\n}\n\nWallet.prototype._hasAddress = function(address) {\n  return (\n    Object.keys(this)\n      .map(item => item.toLowerCase())\n      .indexOf(address.toLowerCase()) > -1\n  )\n}\n\nWallet.prototype.add = function(val) {\n  let account = val\n  if (isString(val) === true || isBuffer(val) === true) {\n    account = this._accounts.privateKeyToAccount(toBuffer(val))\n  }\n  this[account.address] = account\n  this._recalculateLength()\n  return account\n}\n\nWallet.prototype.create = function(numberOfAccounts, entropy) {\n  for (let i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy))\n  }\n  return this\n}\n\nWallet.prototype.remove = function(address) {\n  let exists = this._hasAddress(address)\n  delete this[address]\n  this._recalculateLength()\n  return exists\n}\n\nWallet.prototype.clear = function() {\n  let wallet = this\n  Object.keys(this).forEach(key => {\n    if (isAccountAddress(key) === true) {\n      delete wallet[key]\n    }\n  })\n  wallet._recalculateLength()\n  return this\n}\n\nWallet.prototype._getPrivateKeys = function() {\n  let items = []\n  each(this, (val, key) => {\n    if (isAccountAddress(key) === true && isEmpty(val.privateKey) === false) {\n      items.push(val.privateKey)\n    }\n  })\n  return items\n}\n\nWallet.prototype.encrypt = function(password, options) {\n  return this._getPrivateKeys().map(privateKey =>\n    this._accounts.encrypt(privateKey, password, options)\n  )\n}\n\nWallet.prototype.decrypt = function(keystores, password) {\n  each(keystores, keystore => {\n    let account = this._accounts.decrypt(keystore, password)\n    this.add(account)\n  })\n  return this\n}\n\nWallet.prototype.save = function(password, keyName) {\n  if (typeof window === 'undefined') {\n    throw new Error('wallet save is a browser local storage function')\n  }\n  let op = this.encrypt(password, {kdf: 'pbkdf2'})\n  op = JSON.stringify(op)\n  window.localStorage.setItem(keyName || this.defaultKeyName, op)\n  return true\n}\n\nWallet.prototype.load = function(password, keyName) {\n  if (typeof window === 'undefined') {\n    throw new Error('wallet load is a browser local storage function')\n  }\n  let keystoresText = window.localStorage.getItem(\n    keyName || this.defaultKeyName\n  )\n  let keystores = JSON.parse(keystoresText)\n  this.decrypt(keystores, password)\n  return this\n}\n\nmodule.exports = Wallet\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/wallet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 358,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/wallet.js",
    "static": true,
    "longname": "src/wallet.js~isString",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "isBuffer",
    "memberof": "src/wallet.js",
    "static": true,
    "longname": "src/wallet.js~isBuffer",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "isAccountAddress",
    "memberof": "src/wallet.js",
    "static": true,
    "longname": "src/wallet.js~isAccountAddress",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 361,
    "kind": "variable",
    "name": "nonAccountKeys",
    "memberof": "src/wallet.js",
    "static": true,
    "longname": "src/wallet.js~nonAccountKeys",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "Wallet",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~Wallet",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "accounts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "_recalculateLength",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~_recalculateLength",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "_hasAddress",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~_hasAddress",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "add",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~add",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "create",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~create",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "numberOfAccounts",
        "types": [
          "*"
        ]
      },
      {
        "name": "entropy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "remove",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~remove",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 368,
    "kind": "function",
    "name": "clear",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~clear",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "_getPrivateKeys",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~_getPrivateKeys",
    "access": "private",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "encrypt",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~encrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "decrypt",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~decrypt",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "keystores",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "save",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~save",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "keyName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "load",
    "memberof": "src/wallet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wallet.js~load",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/wallet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "keyName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "src/websocket-provider.js",
    "content": "/*\n\nDeveloper notes:\nIf it looks complicated it's because it's trying to intelligently\nconnect, reconnect, and send messages but there's no request-response\nparadigm. It relies on sending an `id` then watching messages that come back\nwith that `id`.\n\nIt uses console due to there not yet being an interface for giving\nfeedback to the API consumer.\n\n*/\n\nlet WebSocket = require('ws/lib/websocket')\n\nfunction WebsocketProvider(url, opts) {\n  let prov = {}\n  let client\n  let handlers = {}\n  let connectTries = 0\n  let connectTriesMax = 10\n\n  let connect = () => {\n    connectTries += 1\n\n    if (connectTries > connectTriesMax) {\n      /* eslint-disable no-console */\n      console.error('aion web3 websocket provider')\n      /* eslint-enable no-console */\n    }\n\n    client = new WebSocket(url, opts)\n\n    client.on('message', res => {\n      let body = JSON.parse(res)\n      if (body.id !== undefined && handlers[body.id] !== undefined) {\n        handlers[body.id](body)\n      }\n    })\n\n    client.on('error', err => {\n      /* eslint-disable no-console */\n      console.error('websocket provider error', err)\n      /* eslint-enable no-console */\n    })\n  }\n\n  prov.send = (payload, done) => {\n    let sendTries = 0\n    let sendTriesMax = 10\n    let sent = false\n    let finished = false\n    let tryTimer\n\n    // random message id so we know how to get our response\n    let id = Math.random()\n      .toString()\n      .substring(2)\n\n    let body = JSON.stringify(Object.assign({}, payload, {id}))\n\n    let cleanup = () => {\n      finished = true\n      clearInterval(tryTimer)\n      delete handlers[id]\n    }\n\n    // message response handler\n    handlers[id] = body => {\n      if (finished === true) {\n        return\n      }\n      done(null, body)\n      cleanup()\n    }\n\n    if (client === undefined) {\n      connect()\n    }\n\n    if (client.readyState === 1) {\n      // already connected, just send\n      client.send(body)\n      return\n    }\n\n    let retry = () => {\n      sendTries += 1\n\n      if (sent === true || finished === true) {\n        // already finished, do nothing\n        return\n      }\n\n      if (sendTries > sendTriesMax) {\n        // too many\n        sent = true\n        done(\n          new Error(`\n            WebSocket send failed,\n            Send tries:  ${sendTries},\n            Max send tries: ${sendTriesMax}\n          `)\n        )\n        cleanup()\n        return\n      }\n\n      if (client.readyState === 0) {\n        // waiting to connect\n        return\n      }\n\n      if (client.readyState === 1) {\n        // connected again, send!\n        client.send(body)\n        sent = true\n        return\n      }\n\n      if (client.readyState === 2) {\n        // disconnecting\n        return\n      }\n\n      if (client.readyState === 3) {\n        // disconnected, reconnect\n        connect()\n        return\n      }\n    }\n\n    tryTimer = setInterval(retry, 50)\n  }\n\n  return prov\n}\n\nmodule.exports = WebsocketProvider\n",
    "static": true,
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/src/websocket-provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "WebSocket",
    "memberof": "src/websocket-provider.js",
    "static": true,
    "longname": "src/websocket-provider.js~WebSocket",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/websocket-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "WebsocketProvider",
    "memberof": "src/websocket-provider.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/websocket-provider.js~WebsocketProvider",
    "access": "public",
    "export": false,
    "importPath": "aion-web3/src/websocket-provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# aion_web3\n\nA JavaScript library for interacting with the Aion network.\n\n**If you're porting your Ethereum app to Aion this API is nearly identical. Minimal modifications are necessary if any.**\n\n* [Guide: Porting Ethereum web3-based app to Aion](./docs/guides/porting.md)\n\n## Install\n\n```sh\nnpm install aion-web3\n```\n\n## Documentation\n\n[docs](./docs)\n",
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/readme.md",
    "name": "./readme.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"aion-web3\",\n  \"namespace\": \"aion\",\n  \"version\": \"1.0.0\",\n  \"description\": \"aion web3-v1.0.0-compatible api\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"ajv\": \"^6.5.0\",\n    \"bignumber.js\": \"^7.0.1\",\n    \"blake2b\": \"^2.1.2\",\n    \"bn.js\": \"^4.11.8\",\n    \"cross-fetch\": \"^2.2.0\",\n    \"crypto-browserify\": \"^3.12.0\",\n    \"elliptic\": \"^6.4.0\",\n    \"js-sha3\": \"^0.7.0\",\n    \"lodash\": \"^4.17.10\",\n    \"number-to-bn\": \"^1.7.0\",\n    \"randomhex\": \"^0.1.5\",\n    \"rlp\": \"^2.1.0\",\n    \"safe-buffer\": \"^5.1.2\",\n    \"scryptsy\": \"^2.0.0\",\n    \"tweetnacl\": \"^1.0.0\",\n    \"underscore\": \"^1.8.3\",\n    \"utf8\": \"^3.0.0\",\n    \"uuid\": \"^3.2.1\",\n    \"webpack\": \"^4.16.1\",\n    \"ws\": \"^4.0.0\"\n  },\n  \"devDependencies\": {\n    \"async\": \"^2.6.1\",\n    \"babel-loader\": \"^7.1.5\",\n    \"babylon\": \"^6.18.0\",\n    \"blakejs\": \"^1.1.0\",\n    \"body-parser\": \"^1.18.2\",\n    \"crypto-js\": \"^3.1.9-1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"5.1.0\",\n    \"eslint-config-prettier\": \"^2.9.0\",\n    \"eslint-plugin-prettier\": \"^2.6.2\",\n    \"express\": \"^4.16.3\",\n    \"http-server\": \"^0.11.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^5.2.0\",\n    \"nodemon\": \"^1.18.2\",\n    \"npm-run-all\": \"^4.1.3\",\n    \"prettier\": \"^1.13.7\",\n    \"should\": \"^13.2.1\",\n    \"web3-utils\": \"^1.0.0-beta.34\"\n  },\n  \"scripts\": {\n    \"clean\": \"rm -rf dist .eslintcache\",\n    \"setup-dist\": \"mkdir -p dist\",\n    \"dev-server\": \"nodemon -L -d 1 -w test/unit/fixtures/rpc.js -w test/unit/server.js test/unit/server.js || true\",\n    \"dev-eslint\": \"sleep 1 && nodemon -L -d 1 -w src -w test --exec 'eslint --cache src test' || true\",\n    \"dev-mocha\": \"sleep 2 && nodemon -L -d 2 -w src -w test --exec 'mocha --opts mocha.opts test/unit' || true\",\n    \"dev\": \"run-p dev-*\",\n    \"docs-server\": \"http-server docs/gen -c-1 -a 127.0.0.1 -p 9912 -s\",\n    \"test-eslint\": \"eslint src test\",\n    \"test-mocha\": \"mocha --opts mocha.opts test/unit\",\n    \"test\": \"run-s test-*\",\n    \"prd-prettier\": \"prettier --config prettier.config.js --write './{src,test}/**/*.js'\",\n    \"prd-docs\": \"jsdox --output docs src\",\n    \"prd\": \"run-s clean setup-* prd-* test-*\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aionnetwork/aion_web3.git\"\n  },\n  \"homepage\": \"https://github.com/aionnetwork/aion_web3\",\n  \"bugs\": {\n    \"url\": \"https://github.com/aionnetwork/aion_web3/issues\"\n  },\n  \"keywords\": [\n    \"aion\",\n    \"web3\",\n    \"json-rpc\",\n    \"jsonrpc\"\n  ],\n  \"author\": \"aionnetwork\",\n  \"authors\": [{\n    \"name\": \"chris\",\n    \"email\": \"aion.6368726973@gmail.com\",\n    \"url\": \"https://github.com/aion-6368726973\"\n  }],\n  \"license\": \"LGPL-3.0\"\n}\n",
    "longname": "/Users/tcrowe/gitcoin/git/aion_web3/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]