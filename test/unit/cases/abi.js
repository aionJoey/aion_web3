let cases = [
  {
    name: 'simple bool',
    types: ['bool'],
    params: [true],
    expected: ['00000000000000000000000000000001']
  },
  {
    name: 'medium bool',
    types: ['bool', 'bool', 'bool[3]'],
    params: [true, false, [true, false, true]],
    expected: [
      '00000000000000000000000000000001',
      '00000000000000000000000000000000',
      '00000000000000000000000000000001',
      '00000000000000000000000000000000',
      '00000000000000000000000000000001'
    ]
  },
  {
    name: 'complex bool',
    types: ['bool', 'bool[2]', 'bool'],
    params: [true, [false, false], false],
    expected: [
      '00000000000000000000000000000001',
      '00000000000000000000000000000000',
      '00000000000000000000000000000000',
      '00000000000000000000000000000000'
    ]
  },
  {
    name: 'simple uint',
    types: ['uint'],
    params: [0xffffff],
    expected: ['00000000000000000000000000ffffff']
  },
  {
    name: 'from abi doc',
    types: ['uint[]', 'string[]'],
    params: [[1, 2, 3, 4, 5, 6], ['one', 'two', 'three']],
    expected: [
      '00000000000000000000000000000020',
      '00000000000000000000000000000090',
      '00000000000000000000000000000006',
      '00000000000000000000000000000001',
      '00000000000000000000000000000002',
      '00000000000000000000000000000003',
      '00000000000000000000000000000004',
      '00000000000000000000000000000005',
      '00000000000000000000000000000006',
      '00000000000000000000000000000003',
      '000000000000000000000000000000036f6e6500000000000000000000000000',
      '0000000000000000000000000000000374776f00000000000000000000000000',
      '0000000000000000000000000000000574687265650000000000000000000000'
    ]
  },
  {
    name: 'single value and fixed array',
    types: ['int', 'bool[4]'],
    params: [6, [true, true, false, false]],
    expected: [
      '00000000000000000000000000000006',
      '00000000000000000000000000000001',
      '00000000000000000000000000000001',
      '00000000000000000000000000000000',
      '00000000000000000000000000000000'
    ]
  },
  {
    name: 'single value and dynamic array',
    types: ['int', 'bool[]'],
    params: [6, [true, true, false, false]],
    expected: [
      '00000000000000000000000000000020',
      '00000000000000000000000000000030',
      '00000000000000000000000000000006',
      '00000000000000000000000000000004',
      '00000000000000000000000000000001',
      '00000000000000000000000000000001',
      '00000000000000000000000000000000',
      '00000000000000000000000000000000'
    ]
  },
  {
    name: 'numbers and address',
    types: ['int', 'int', 'address'],
    params: [
      1,
      2,
      '0xa07c95cc8729a0503c5ad50eb37ec8a27cd22d65de3bb225982ec55201366920'
    ],
    expected: [
      '00000000000000000000000000000001',
      '00000000000000000000000000000002',
      'a07c95cc8729a0503c5ad50eb37ec8a27cd22d65de3bb225982ec55201366920'
    ]
  },
  {
    name: 'complex addresses and some other stuff',
    types: ['address[]', 'bool', 'int[2]'],
    params: [
      [
        '0xa07c95cc8729a0503c5ad50eb37ec8a27cd22d65de3bb225982ec55201366920',
        '0xa05a3889b106e75baa621b8cc719679a3dbdd799afac1ca6b42d03dc93a23687',
        '0xa0229e43f4a040f9fa6b2ab2f2cccc066025117def3414e08edbe7aee8e61647'
      ],
      false,
      [6, 7]
    ],
    expected: [
      '00000000000000000000000000000030',
      '000000000000000000000000000000a0',
      '000000000000000000000000000000b0',
      '00000000000000000000000000000003',
      'a07c95cc8729a0503c5ad50eb37ec8a27cd22d65de3bb225982ec55201366920',
      'a05a3889b106e75baa621b8cc719679a3dbdd799afac1ca6b42d03dc93a23687',
      'a0229e43f4a040f9fa6b2ab2f2cccc066025117def3414e08edbe7aee8e61647',
      '00000000000000000000000000000000',
      '00000000000000000000000000000006',
      '00000000000000000000000000000007'
    ]
  }
]

module.exports = cases
